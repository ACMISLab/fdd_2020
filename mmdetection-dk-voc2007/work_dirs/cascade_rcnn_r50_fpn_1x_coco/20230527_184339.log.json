{"env_info": "sys.platform: linux\nPython: 3.8.16 (default, Mar  2 2023, 03:21:46) [GCC 11.2.0]\nCUDA available: True\nGPU 0: NVIDIA RTX A6000\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 11.4, V11.4.152\nGCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\nPyTorch: 1.11.0+cu113\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.5.2 (Git Hash a9302535553c73243c632ad3c4c80beec3d19a1e)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.3\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.2\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, \n\nTorchVision: 0.12.0+cu113\nOpenCV: 4.7.0\nMMCV: 1.7.1\nMMCV Compiler: GCC 9.3\nMMCV CUDA Compiler: 11.3\nMMDetection: 2.25.0+", "config": "model = dict(\n    type='CascadeRCNN',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch',\n        init_cfg=dict(type='Pretrained', checkpoint='torchvision://resnet50')),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(\n            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=1.0)),\n    roi_head=dict(\n        type='CascadeRoIHead',\n        num_stages=3,\n        stage_loss_weights=[1, 0.5, 0.25],\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=[\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=20,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.1, 0.1, 0.2, 0.2]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='DKLoss', use_sigmoid=False, loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=20,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.05, 0.05, 0.1, 0.1]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='DKLoss', use_sigmoid=False, loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=20,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.033, 0.033, 0.067, 0.067]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='DKLoss', use_sigmoid=False, loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0, loss_weight=1.0))\n        ]),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                pos_fraction=0.5,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=False),\n            allowed_border=0,\n            pos_weight=-1,\n            debug=False),\n        rpn_proposal=dict(\n            nms_pre=2000,\n            max_per_img=2000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=[\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.5,\n                    neg_iou_thr=0.5,\n                    min_pos_iou=0.5,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.6,\n                    neg_iou_thr=0.6,\n                    min_pos_iou=0.6,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.7,\n                    neg_iou_thr=0.7,\n                    min_pos_iou=0.7,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False)\n        ]),\n    test_cfg=dict(\n        rpn=dict(\n            nms_pre=1000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            score_thr=0.05,\n            nms=dict(type='nms', iou_threshold=0.5),\n            max_per_img=100)))\ndataset_type = 'VOCDataset'\ndata_root = 'data/VOCdevkit/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ndata = dict(\n    samples_per_gpu=32,\n    workers_per_gpu=0,\n    train=dict(\n        type='RepeatDataset',\n        times=3,\n        dataset=dict(\n            type='ClassBalancedDataset',\n            oversample_thr=0.01,\n            dataset=dict(\n                type='VOCDataset',\n                ann_file=[\n                    'data/VOCdevkit/VOC2007/ImageSets/Main/trainval.txt'\n                ],\n                img_prefix=['data/VOCdevkit/VOC2007/'],\n                pipeline=[\n                    dict(type='LoadImageFromFile'),\n                    dict(type='LoadAnnotations', with_bbox=True),\n                    dict(\n                        type='Resize',\n                        img_scale=[(480, 1000), (512, 1000), (544, 1000),\n                                   (576, 1000), (608, 1000), (640, 1000),\n                                   (672, 1000), (704, 1000), (736, 1000),\n                                   (768, 1000), (800, 1000)],\n                        multiscale_mode='value',\n                        keep_ratio=True),\n                    dict(type='RandomFlip', flip_ratio=0.5),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n                ]))),\n    val=dict(\n        type='VOCDataset',\n        ann_file='data/VOCdevkit/VOC2007/ImageSets/Main/test.txt',\n        img_prefix='data/VOCdevkit/VOC2007/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=[(544, 1000), (640, 1000), (736, 1000), (800, 1000)],\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='VOCDataset',\n        ann_file='data/VOCdevkit/VOC2007/ImageSets/Main/test.txt',\n        img_prefix='data/VOCdevkit/VOC2007/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=[(544, 1000), (640, 1000), (736, 1000), (800, 1000)],\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(interval=1, metric='mAP')\noptimizer = dict(type='SGD', lr=0.005, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\nauto_scale_lr = dict(enable=True, base_batch_size=16)\nwork_dir = './work_dirs/cascade_rcnn_r50_fpn_1x_coco'\nauto_resume = False\ngpu_ids = [0]\n", "seed": 1848043090, "exp_name": "cascade_rcnn_r50_fpn_1x_coco.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00099, "memory": 37651, "data_time": 0.5196, "loss_rpn_cls": 0.40141, "loss_rpn_bbox": 0.02666, "s0.loss_cls": 0.71371, "s0.acc": 87.69629, "s0.loss_bbox": 0.05399, "s1.loss_cls": 0.34683, "s1.acc": 86.04614, "s1.loss_bbox": 0.01711, "s2.loss_cls": 0.20983, "s2.acc": 80.20959, "s2.loss_bbox": 0.00269, "loss": 1.77223, "time": 2.89582}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00199, "memory": 37651, "data_time": 0.5471, "loss_rpn_cls": 0.07787, "loss_rpn_bbox": 0.02079, "s0.loss_cls": 0.21426, "s0.acc": 95.62183, "s0.loss_bbox": 0.10906, "s1.loss_cls": 0.05713, "s1.acc": 97.96643, "s1.loss_bbox": 0.03688, "s2.loss_cls": 0.01499, "s2.acc": 99.03674, "s2.loss_bbox": 0.0061, "loss": 0.53709, "time": 3.24598}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00299, "memory": 37651, "data_time": 0.80044, "loss_rpn_cls": 0.06185, "loss_rpn_bbox": 0.02054, "s0.loss_cls": 0.20171, "s0.acc": 95.13977, "s0.loss_bbox": 0.12144, "s1.loss_cls": 0.05363, "s1.acc": 97.77234, "s1.loss_bbox": 0.04107, "s2.loss_cls": 0.01426, "s2.acc": 98.97388, "s2.loss_bbox": 0.00668, "loss": 0.52117, "time": 3.5734}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.00399, "memory": 37651, "data_time": 1.00105, "loss_rpn_cls": 0.05061, "loss_rpn_bbox": 0.01964, "s0.loss_cls": 0.19916, "s0.acc": 94.8208, "s0.loss_bbox": 0.12955, "s1.loss_cls": 0.05602, "s1.acc": 97.44556, "s1.loss_bbox": 0.04854, "s2.loss_cls": 0.01487, "s2.acc": 98.8468, "s2.loss_bbox": 0.00827, "loss": 0.52665, "time": 3.95129}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.00499, "memory": 37651, "data_time": 0.96867, "loss_rpn_cls": 0.04212, "loss_rpn_bbox": 0.02025, "s0.loss_cls": 0.19315, "s0.acc": 94.55359, "s0.loss_bbox": 0.13534, "s1.loss_cls": 0.06358, "s1.acc": 96.67944, "s1.loss_bbox": 0.06368, "s2.loss_cls": 0.01765, "s2.acc": 98.4834, "s2.loss_bbox": 0.0122, "loss": 0.54796, "time": 4.30399}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.00598, "memory": 37651, "data_time": 1.06602, "loss_rpn_cls": 0.03577, "loss_rpn_bbox": 0.01962, "s0.loss_cls": 0.18693, "s0.acc": 94.22546, "s0.loss_bbox": 0.13373, "s1.loss_cls": 0.07429, "s1.acc": 95.65259, "s1.loss_bbox": 0.08248, "s2.loss_cls": 0.02269, "s2.acc": 97.79492, "s2.loss_bbox": 0.01957, "loss": 0.57507, "time": 4.60506}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.00698, "memory": 37651, "data_time": 1.00045, "loss_rpn_cls": 0.03206, "loss_rpn_bbox": 0.01836, "s0.loss_cls": 0.17738, "s0.acc": 93.9895, "s0.loss_bbox": 0.13189, "s1.loss_cls": 0.08285, "s1.acc": 94.73901, "s1.loss_bbox": 0.09654, "s2.loss_cls": 0.02887, "s2.acc": 96.80005, "s2.loss_bbox": 0.02885, "loss": 0.59679, "time": 4.64709}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.00798, "memory": 37651, "data_time": 1.08371, "loss_rpn_cls": 0.02804, "loss_rpn_bbox": 0.01859, "s0.loss_cls": 0.15823, "s0.acc": 94.06958, "s0.loss_bbox": 0.12821, "s1.loss_cls": 0.07857, "s1.acc": 94.45776, "s1.loss_bbox": 0.09947, "s2.loss_cls": 0.03108, "s2.acc": 96.25452, "s2.loss_bbox": 0.03465, "loss": 0.57684, "time": 4.91343}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.00898, "memory": 37651, "data_time": 1.02805, "loss_rpn_cls": 0.02514, "loss_rpn_bbox": 0.01776, "s0.loss_cls": 0.13465, "s0.acc": 94.49792, "s0.loss_bbox": 0.11987, "s1.loss_cls": 0.06924, "s1.acc": 94.6875, "s1.loss_bbox": 0.09655, "s2.loss_cls": 0.03059, "s2.acc": 96.05823, "s2.loss_bbox": 0.03697, "loss": 0.53077, "time": 4.61273}
{"mode": "val", "epoch": 1, "iter": 4952, "lr": 0.0094, "mAP": 0.40776, "AP50": 0.408}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.01, "memory": 37651, "data_time": 0.99001, "loss_rpn_cls": 0.0243, "loss_rpn_bbox": 0.01688, "s0.loss_cls": 0.12642, "s0.acc": 94.30005, "s0.loss_bbox": 0.12411, "s1.loss_cls": 0.06433, "s1.acc": 94.43808, "s1.loss_bbox": 0.10456, "s2.loss_cls": 0.03046, "s2.acc": 95.45963, "s2.loss_bbox": 0.04396, "loss": 0.53503, "time": 4.78958}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.01, "memory": 37651, "data_time": 0.99284, "loss_rpn_cls": 0.02344, "loss_rpn_bbox": 0.01682, "s0.loss_cls": 0.12176, "s0.acc": 94.23792, "s0.loss_bbox": 0.12448, "s1.loss_cls": 0.06055, "s1.acc": 94.35344, "s1.loss_bbox": 0.11218, "s2.loss_cls": 0.02953, "s2.acc": 94.93013, "s2.loss_bbox": 0.04942, "loss": 0.53819, "time": 5.01175}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.01, "memory": 37651, "data_time": 0.94508, "loss_rpn_cls": 0.02089, "loss_rpn_bbox": 0.01553, "s0.loss_cls": 0.10721, "s0.acc": 94.5282, "s0.loss_bbox": 0.12082, "s1.loss_cls": 0.05418, "s1.acc": 94.47851, "s1.loss_bbox": 0.11038, "s2.loss_cls": 0.02695, "s2.acc": 95.00518, "s2.loss_bbox": 0.0517, "loss": 0.50766, "time": 4.92557}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.01, "memory": 37651, "data_time": 0.99512, "loss_rpn_cls": 0.02068, "loss_rpn_bbox": 0.01551, "s0.loss_cls": 0.1113, "s0.acc": 94.35229, "s0.loss_bbox": 0.12189, "s1.loss_cls": 0.05725, "s1.acc": 94.20624, "s1.loss_bbox": 0.11618, "s2.loss_cls": 0.02727, "s2.acc": 94.81325, "s2.loss_bbox": 0.05536, "loss": 0.52543, "time": 4.94073}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.01, "memory": 37651, "data_time": 1.03676, "loss_rpn_cls": 0.02016, "loss_rpn_bbox": 0.0157, "s0.loss_cls": 0.10624, "s0.acc": 94.52454, "s0.loss_bbox": 0.12211, "s1.loss_cls": 0.05389, "s1.acc": 94.52011, "s1.loss_bbox": 0.11716, "s2.loss_cls": 0.0261, "s2.acc": 94.80083, "s2.loss_bbox": 0.05686, "loss": 0.51822, "time": 5.13338}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.01, "memory": 37651, "data_time": 1.14101, "loss_rpn_cls": 0.01969, "loss_rpn_bbox": 0.01566, "s0.loss_cls": 0.10051, "s0.acc": 94.58838, "s0.loss_bbox": 0.1199, "s1.loss_cls": 0.04995, "s1.acc": 94.56911, "s1.loss_bbox": 0.11593, "s2.loss_cls": 0.02447, "s2.acc": 94.78821, "s2.loss_bbox": 0.05695, "loss": 0.50305, "time": 5.07585}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.01, "memory": 37651, "data_time": 1.09235, "loss_rpn_cls": 0.01895, "loss_rpn_bbox": 0.01476, "s0.loss_cls": 0.09343, "s0.acc": 94.87366, "s0.loss_bbox": 0.11473, "s1.loss_cls": 0.04677, "s1.acc": 94.77721, "s1.loss_bbox": 0.11341, "s2.loss_cls": 0.02313, "s2.acc": 94.91854, "s2.loss_bbox": 0.05746, "loss": 0.48263, "time": 4.86327}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 0.01, "memory": 37651, "data_time": 0.98922, "loss_rpn_cls": 0.01941, "loss_rpn_bbox": 0.01541, "s0.loss_cls": 0.09464, "s0.acc": 94.74902, "s0.loss_bbox": 0.1151, "s1.loss_cls": 0.04773, "s1.acc": 94.70315, "s1.loss_bbox": 0.11439, "s2.loss_cls": 0.02396, "s2.acc": 94.80317, "s2.loss_bbox": 0.05982, "loss": 0.49046, "time": 4.90681}
{"mode": "train", "epoch": 2, "iter": 450, "lr": 0.01, "memory": 37651, "data_time": 1.05416, "loss_rpn_cls": 0.0191, "loss_rpn_bbox": 0.01457, "s0.loss_cls": 0.09017, "s0.acc": 94.95947, "s0.loss_bbox": 0.1101, "s1.loss_cls": 0.04595, "s1.acc": 94.80803, "s1.loss_bbox": 0.11274, "s2.loss_cls": 0.02309, "s2.acc": 94.80639, "s2.loss_bbox": 0.05934, "loss": 0.47507, "time": 5.11727}
{"mode": "val", "epoch": 2, "iter": 4952, "lr": 0.01, "mAP": 0.63315, "AP50": 0.633}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.01, "memory": 37651, "data_time": 1.17271, "loss_rpn_cls": 0.01703, "loss_rpn_bbox": 0.01458, "s0.loss_cls": 0.08269, "s0.acc": 95.15991, "s0.loss_bbox": 0.10688, "s1.loss_cls": 0.04216, "s1.acc": 94.93397, "s1.loss_bbox": 0.1119, "s2.loss_cls": 0.02103, "s2.acc": 95.00316, "s2.loss_bbox": 0.0606, "loss": 0.45687, "time": 5.43877}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.01, "memory": 37651, "data_time": 1.11494, "loss_rpn_cls": 0.0165, "loss_rpn_bbox": 0.01391, "s0.loss_cls": 0.0821, "s0.acc": 95.21069, "s0.loss_bbox": 0.10493, "s1.loss_cls": 0.04163, "s1.acc": 95.08516, "s1.loss_bbox": 0.11426, "s2.loss_cls": 0.02127, "s2.acc": 94.91439, "s2.loss_bbox": 0.06338, "loss": 0.45798, "time": 5.33557}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.01, "memory": 37651, "data_time": 1.09295, "loss_rpn_cls": 0.01805, "loss_rpn_bbox": 0.01541, "s0.loss_cls": 0.0868, "s0.acc": 94.99219, "s0.loss_bbox": 0.112, "s1.loss_cls": 0.0441, "s1.acc": 94.86636, "s1.loss_bbox": 0.11649, "s2.loss_cls": 0.02243, "s2.acc": 94.72689, "s2.loss_bbox": 0.06293, "loss": 0.47821, "time": 5.14141}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.01, "memory": 37651, "data_time": 1.06412, "loss_rpn_cls": 0.01658, "loss_rpn_bbox": 0.0139, "s0.loss_cls": 0.07913, "s0.acc": 95.29309, "s0.loss_bbox": 0.1023, "s1.loss_cls": 0.04007, "s1.acc": 95.19839, "s1.loss_bbox": 0.11149, "s2.loss_cls": 0.02035, "s2.acc": 95.0805, "s2.loss_bbox": 0.06325, "loss": 0.44706, "time": 5.31182}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 0.01, "memory": 37651, "data_time": 1.11325, "loss_rpn_cls": 0.01636, "loss_rpn_bbox": 0.01474, "s0.loss_cls": 0.07959, "s0.acc": 95.3114, "s0.loss_bbox": 0.10328, "s1.loss_cls": 0.04101, "s1.acc": 95.06563, "s1.loss_bbox": 0.11398, "s2.loss_cls": 0.02103, "s2.acc": 94.85442, "s2.loss_bbox": 0.06467, "loss": 0.45466, "time": 5.44508}
{"mode": "train", "epoch": 3, "iter": 300, "lr": 0.01, "memory": 37651, "data_time": 1.02661, "loss_rpn_cls": 0.01555, "loss_rpn_bbox": 0.01397, "s0.loss_cls": 0.07958, "s0.acc": 95.14758, "s0.loss_bbox": 0.10643, "s1.loss_cls": 0.04069, "s1.acc": 95.05693, "s1.loss_bbox": 0.1153, "s2.loss_cls": 0.0208, "s2.acc": 94.86587, "s2.loss_bbox": 0.06598, "loss": 0.45831, "time": 5.2888}
{"mode": "train", "epoch": 3, "iter": 350, "lr": 0.01, "memory": 37651, "data_time": 0.93581, "loss_rpn_cls": 0.01537, "loss_rpn_bbox": 0.01408, "s0.loss_cls": 0.07688, "s0.acc": 95.36328, "s0.loss_bbox": 0.10308, "s1.loss_cls": 0.03891, "s1.acc": 95.24788, "s1.loss_bbox": 0.11452, "s2.loss_cls": 0.02026, "s2.acc": 94.8817, "s2.loss_bbox": 0.0675, "loss": 0.45062, "time": 4.87098}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.01, "memory": 37651, "data_time": 0.96538, "loss_rpn_cls": 0.0156, "loss_rpn_bbox": 0.01365, "s0.loss_cls": 0.07267, "s0.acc": 95.56104, "s0.loss_bbox": 0.09618, "s1.loss_cls": 0.03698, "s1.acc": 95.41173, "s1.loss_bbox": 0.10769, "s2.loss_cls": 0.01956, "s2.acc": 95.08111, "s2.loss_bbox": 0.06362, "loss": 0.42595, "time": 4.82076}
{"mode": "train", "epoch": 3, "iter": 450, "lr": 0.01, "memory": 37651, "data_time": 1.03293, "loss_rpn_cls": 0.01479, "loss_rpn_bbox": 0.01409, "s0.loss_cls": 0.07198, "s0.acc": 95.60059, "s0.loss_bbox": 0.09611, "s1.loss_cls": 0.03642, "s1.acc": 95.52694, "s1.loss_bbox": 0.10821, "s2.loss_cls": 0.01871, "s2.acc": 95.1764, "s2.loss_bbox": 0.06417, "loss": 0.42448, "time": 5.19667}
{"mode": "val", "epoch": 3, "iter": 4952, "lr": 0.01, "mAP": 0.70263, "AP50": 0.703}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 0.01, "memory": 37651, "data_time": 1.07191, "loss_rpn_cls": 0.01404, "loss_rpn_bbox": 0.01275, "s0.loss_cls": 0.07007, "s0.acc": 95.5968, "s0.loss_bbox": 0.09586, "s1.loss_cls": 0.03579, "s1.acc": 95.47027, "s1.loss_bbox": 0.10916, "s2.loss_cls": 0.01916, "s2.acc": 95.02951, "s2.loss_bbox": 0.06682, "loss": 0.42367, "time": 5.08401}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.01, "memory": 37651, "data_time": 1.0121, "loss_rpn_cls": 0.01451, "loss_rpn_bbox": 0.01267, "s0.loss_cls": 0.06925, "s0.acc": 95.64746, "s0.loss_bbox": 0.09296, "s1.loss_cls": 0.03507, "s1.acc": 95.54499, "s1.loss_bbox": 0.10488, "s2.loss_cls": 0.01848, "s2.acc": 95.19421, "s2.loss_bbox": 0.06455, "loss": 0.41237, "time": 4.96134}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 0.01, "memory": 37651, "data_time": 0.93948, "loss_rpn_cls": 0.01373, "loss_rpn_bbox": 0.0133, "s0.loss_cls": 0.06907, "s0.acc": 95.59326, "s0.loss_bbox": 0.09654, "s1.loss_cls": 0.03538, "s1.acc": 95.46356, "s1.loss_bbox": 0.11089, "s2.loss_cls": 0.01895, "s2.acc": 95.02608, "s2.loss_bbox": 0.06901, "loss": 0.42687, "time": 4.94164}
{"mode": "train", "epoch": 4, "iter": 200, "lr": 0.01, "memory": 37651, "data_time": 0.92236, "loss_rpn_cls": 0.01417, "loss_rpn_bbox": 0.01284, "s0.loss_cls": 0.06653, "s0.acc": 95.76111, "s0.loss_bbox": 0.09251, "s1.loss_cls": 0.03429, "s1.acc": 95.6166, "s1.loss_bbox": 0.10832, "s2.loss_cls": 0.0185, "s2.acc": 95.11291, "s2.loss_bbox": 0.06733, "loss": 0.41449, "time": 4.86517}
{"mode": "train", "epoch": 4, "iter": 250, "lr": 0.01, "memory": 37651, "data_time": 0.99113, "loss_rpn_cls": 0.01386, "loss_rpn_bbox": 0.01329, "s0.loss_cls": 0.06575, "s0.acc": 95.85339, "s0.loss_bbox": 0.08938, "s1.loss_cls": 0.03328, "s1.acc": 95.78884, "s1.loss_bbox": 0.10167, "s2.loss_cls": 0.01752, "s2.acc": 95.4368, "s2.loss_bbox": 0.06449, "loss": 0.39925, "time": 5.11603}
{"mode": "train", "epoch": 4, "iter": 300, "lr": 0.01, "memory": 37651, "data_time": 1.08269, "loss_rpn_cls": 0.01332, "loss_rpn_bbox": 0.01312, "s0.loss_cls": 0.06629, "s0.acc": 95.87854, "s0.loss_bbox": 0.08781, "s1.loss_cls": 0.03436, "s1.acc": 95.78797, "s1.loss_bbox": 0.10216, "s2.loss_cls": 0.01836, "s2.acc": 95.37833, "s2.loss_bbox": 0.06525, "loss": 0.40065, "time": 5.53803}
{"mode": "train", "epoch": 4, "iter": 350, "lr": 0.01, "memory": 37651, "data_time": 1.06093, "loss_rpn_cls": 0.01312, "loss_rpn_bbox": 0.01261, "s0.loss_cls": 0.06424, "s0.acc": 95.94739, "s0.loss_bbox": 0.08964, "s1.loss_cls": 0.03342, "s1.acc": 95.80906, "s1.loss_bbox": 0.1029, "s2.loss_cls": 0.01793, "s2.acc": 95.35977, "s2.loss_bbox": 0.06479, "loss": 0.39865, "time": 5.61787}
{"mode": "train", "epoch": 4, "iter": 400, "lr": 0.01, "memory": 37651, "data_time": 1.06388, "loss_rpn_cls": 0.01332, "loss_rpn_bbox": 0.01307, "s0.loss_cls": 0.06602, "s0.acc": 95.73486, "s0.loss_bbox": 0.09155, "s1.loss_cls": 0.03322, "s1.acc": 95.70406, "s1.loss_bbox": 0.10694, "s2.loss_cls": 0.01761, "s2.acc": 95.28318, "s2.loss_bbox": 0.06901, "loss": 0.41074, "time": 5.51095}
{"mode": "train", "epoch": 4, "iter": 450, "lr": 0.01, "memory": 37651, "data_time": 1.00538, "loss_rpn_cls": 0.01394, "loss_rpn_bbox": 0.01291, "s0.loss_cls": 0.06582, "s0.acc": 95.76807, "s0.loss_bbox": 0.08818, "s1.loss_cls": 0.03402, "s1.acc": 95.65874, "s1.loss_bbox": 0.10326, "s2.loss_cls": 0.01821, "s2.acc": 95.20576, "s2.loss_bbox": 0.06665, "loss": 0.403, "time": 5.18948}
{"mode": "val", "epoch": 4, "iter": 4952, "lr": 0.01, "mAP": 0.72531, "AP50": 0.725}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 0.01, "memory": 37651, "data_time": 1.03794, "loss_rpn_cls": 0.01306, "loss_rpn_bbox": 0.01268, "s0.loss_cls": 0.0614, "s0.acc": 95.96936, "s0.loss_bbox": 0.08724, "s1.loss_cls": 0.0314, "s1.acc": 95.89566, "s1.loss_bbox": 0.10222, "s2.loss_cls": 0.01693, "s2.acc": 95.34653, "s2.loss_bbox": 0.06711, "loss": 0.39205, "time": 5.48457}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.01, "memory": 37651, "data_time": 1.03678, "loss_rpn_cls": 0.01304, "loss_rpn_bbox": 0.01294, "s0.loss_cls": 0.06046, "s0.acc": 96.00964, "s0.loss_bbox": 0.08535, "s1.loss_cls": 0.0307, "s1.acc": 95.97881, "s1.loss_bbox": 0.10067, "s2.loss_cls": 0.01672, "s2.acc": 95.47679, "s2.loss_bbox": 0.06815, "loss": 0.38804, "time": 5.71518}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 0.01, "memory": 37651, "data_time": 0.79965, "loss_rpn_cls": 0.01295, "loss_rpn_bbox": 0.01241, "s0.loss_cls": 0.06015, "s0.acc": 96.02771, "s0.loss_bbox": 0.08561, "s1.loss_cls": 0.03036, "s1.acc": 96.02096, "s1.loss_bbox": 0.10047, "s2.loss_cls": 0.01655, "s2.acc": 95.53765, "s2.loss_bbox": 0.06716, "loss": 0.38566, "time": 5.59193}
{"mode": "train", "epoch": 5, "iter": 200, "lr": 0.01, "memory": 37651, "data_time": 0.65408, "loss_rpn_cls": 0.01203, "loss_rpn_bbox": 0.01302, "s0.loss_cls": 0.05964, "s0.acc": 96.01721, "s0.loss_bbox": 0.08532, "s1.loss_cls": 0.02969, "s1.acc": 96.03357, "s1.loss_bbox": 0.10141, "s2.loss_cls": 0.01636, "s2.acc": 95.46761, "s2.loss_bbox": 0.0674, "loss": 0.38488, "time": 5.14949}
{"mode": "train", "epoch": 5, "iter": 250, "lr": 0.01, "memory": 37651, "data_time": 0.60774, "loss_rpn_cls": 0.0118, "loss_rpn_bbox": 0.01234, "s0.loss_cls": 0.05799, "s0.acc": 96.16687, "s0.loss_bbox": 0.08249, "s1.loss_cls": 0.0295, "s1.acc": 96.10233, "s1.loss_bbox": 0.0984, "s2.loss_cls": 0.01624, "s2.acc": 95.52097, "s2.loss_bbox": 0.06566, "loss": 0.37443, "time": 4.99078}
{"mode": "train", "epoch": 5, "iter": 300, "lr": 0.01, "memory": 37651, "data_time": 0.60419, "loss_rpn_cls": 0.012, "loss_rpn_bbox": 0.0118, "s0.loss_cls": 0.05691, "s0.acc": 96.26111, "s0.loss_bbox": 0.0807, "s1.loss_cls": 0.02842, "s1.acc": 96.25902, "s1.loss_bbox": 0.09753, "s2.loss_cls": 0.01555, "s2.acc": 95.77241, "s2.loss_bbox": 0.06756, "loss": 0.37046, "time": 4.88791}
{"mode": "train", "epoch": 5, "iter": 350, "lr": 0.01, "memory": 37651, "data_time": 0.62968, "loss_rpn_cls": 0.01245, "loss_rpn_bbox": 0.01246, "s0.loss_cls": 0.05775, "s0.acc": 96.22131, "s0.loss_bbox": 0.07879, "s1.loss_cls": 0.02919, "s1.acc": 96.19734, "s1.loss_bbox": 0.09246, "s2.loss_cls": 0.01538, "s2.acc": 95.81522, "s2.loss_bbox": 0.06291, "loss": 0.36139, "time": 5.05967}
{"mode": "train", "epoch": 5, "iter": 400, "lr": 0.01, "memory": 37651, "data_time": 0.62093, "loss_rpn_cls": 0.0119, "loss_rpn_bbox": 0.01227, "s0.loss_cls": 0.05604, "s0.acc": 96.26636, "s0.loss_bbox": 0.07848, "s1.loss_cls": 0.02889, "s1.acc": 96.22729, "s1.loss_bbox": 0.09517, "s2.loss_cls": 0.01586, "s2.acc": 95.68085, "s2.loss_bbox": 0.06563, "loss": 0.36424, "time": 5.20908}
{"mode": "train", "epoch": 5, "iter": 450, "lr": 0.01, "memory": 37651, "data_time": 0.71441, "loss_rpn_cls": 0.01136, "loss_rpn_bbox": 0.01211, "s0.loss_cls": 0.0579, "s0.acc": 96.12512, "s0.loss_bbox": 0.08274, "s1.loss_cls": 0.02966, "s1.acc": 96.11885, "s1.loss_bbox": 0.09941, "s2.loss_cls": 0.01626, "s2.acc": 95.5532, "s2.loss_bbox": 0.06784, "loss": 0.37728, "time": 5.62202}
{"mode": "val", "epoch": 5, "iter": 4952, "lr": 0.01, "mAP": 0.73547, "AP50": 0.735}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 0.01, "memory": 37651, "data_time": 0.75825, "loss_rpn_cls": 0.01131, "loss_rpn_bbox": 0.01109, "s0.loss_cls": 0.05504, "s0.acc": 96.35266, "s0.loss_bbox": 0.07887, "s1.loss_cls": 0.02733, "s1.acc": 96.41853, "s1.loss_bbox": 0.09308, "s2.loss_cls": 0.01503, "s2.acc": 95.88928, "s2.loss_bbox": 0.06541, "loss": 0.35716, "time": 5.56216}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 0.01, "memory": 37651, "data_time": 0.65563, "loss_rpn_cls": 0.01078, "loss_rpn_bbox": 0.01147, "s0.loss_cls": 0.052, "s0.acc": 96.47278, "s0.loss_bbox": 0.07536, "s1.loss_cls": 0.02613, "s1.acc": 96.50231, "s1.loss_bbox": 0.09113, "s2.loss_cls": 0.01437, "s2.acc": 96.00834, "s2.loss_bbox": 0.06456, "loss": 0.34581, "time": 5.36301}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 0.01, "memory": 37651, "data_time": 0.63498, "loss_rpn_cls": 0.01116, "loss_rpn_bbox": 0.01138, "s0.loss_cls": 0.05335, "s0.acc": 96.39819, "s0.loss_bbox": 0.07603, "s1.loss_cls": 0.02721, "s1.acc": 96.37434, "s1.loss_bbox": 0.09174, "s2.loss_cls": 0.01539, "s2.acc": 95.81728, "s2.loss_bbox": 0.06462, "loss": 0.35087, "time": 5.46414}
{"mode": "train", "epoch": 6, "iter": 200, "lr": 0.01, "memory": 37651, "data_time": 0.71786, "loss_rpn_cls": 0.01104, "loss_rpn_bbox": 0.01146, "s0.loss_cls": 0.05251, "s0.acc": 96.46997, "s0.loss_bbox": 0.07639, "s1.loss_cls": 0.02633, "s1.acc": 96.46566, "s1.loss_bbox": 0.09124, "s2.loss_cls": 0.01443, "s2.acc": 95.99836, "s2.loss_bbox": 0.0649, "loss": 0.34829, "time": 5.59401}
{"mode": "train", "epoch": 6, "iter": 250, "lr": 0.01, "memory": 37651, "data_time": 0.7168, "loss_rpn_cls": 0.01068, "loss_rpn_bbox": 0.01245, "s0.loss_cls": 0.05246, "s0.acc": 96.40173, "s0.loss_bbox": 0.07871, "s1.loss_cls": 0.02635, "s1.acc": 96.45226, "s1.loss_bbox": 0.09298, "s2.loss_cls": 0.01464, "s2.acc": 95.92938, "s2.loss_bbox": 0.06527, "loss": 0.35355, "time": 5.60112}
{"mode": "train", "epoch": 6, "iter": 300, "lr": 0.01, "memory": 37651, "data_time": 0.6922, "loss_rpn_cls": 0.01104, "loss_rpn_bbox": 0.01228, "s0.loss_cls": 0.0487, "s0.acc": 96.67896, "s0.loss_bbox": 0.07149, "s1.loss_cls": 0.02458, "s1.acc": 96.70238, "s1.loss_bbox": 0.08756, "s2.loss_cls": 0.01379, "s2.acc": 96.20049, "s2.loss_bbox": 0.06284, "loss": 0.33229, "time": 5.23981}
{"mode": "train", "epoch": 6, "iter": 350, "lr": 0.01, "memory": 37651, "data_time": 0.66607, "loss_rpn_cls": 0.01019, "loss_rpn_bbox": 0.01115, "s0.loss_cls": 0.05055, "s0.acc": 96.51843, "s0.loss_bbox": 0.07547, "s1.loss_cls": 0.02578, "s1.acc": 96.48616, "s1.loss_bbox": 0.09136, "s2.loss_cls": 0.01445, "s2.acc": 95.92607, "s2.loss_bbox": 0.06687, "loss": 0.34583, "time": 5.49395}
{"mode": "train", "epoch": 6, "iter": 400, "lr": 0.01, "memory": 37651, "data_time": 0.7332, "loss_rpn_cls": 0.01018, "loss_rpn_bbox": 0.011, "s0.loss_cls": 0.04654, "s0.acc": 96.81909, "s0.loss_bbox": 0.06936, "s1.loss_cls": 0.02404, "s1.acc": 96.79074, "s1.loss_bbox": 0.08465, "s2.loss_cls": 0.0135, "s2.acc": 96.31629, "s2.loss_bbox": 0.06117, "loss": 0.32044, "time": 5.76352}
{"mode": "train", "epoch": 6, "iter": 450, "lr": 0.01, "memory": 37651, "data_time": 0.7925, "loss_rpn_cls": 0.01027, "loss_rpn_bbox": 0.01138, "s0.loss_cls": 0.05128, "s0.acc": 96.46277, "s0.loss_bbox": 0.07423, "s1.loss_cls": 0.02525, "s1.acc": 96.52311, "s1.loss_bbox": 0.09023, "s2.loss_cls": 0.01413, "s2.acc": 96.05253, "s2.loss_bbox": 0.06614, "loss": 0.34291, "time": 5.92192}
{"mode": "val", "epoch": 6, "iter": 4952, "lr": 0.01, "mAP": 0.75614, "AP50": 0.756}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 0.01, "memory": 37651, "data_time": 0.72762, "loss_rpn_cls": 0.00963, "loss_rpn_bbox": 0.01097, "s0.loss_cls": 0.04698, "s0.acc": 96.74902, "s0.loss_bbox": 0.06801, "s1.loss_cls": 0.02317, "s1.acc": 96.87225, "s1.loss_bbox": 0.08209, "s2.loss_cls": 0.01289, "s2.acc": 96.44608, "s2.loss_bbox": 0.05966, "loss": 0.3134, "time": 5.52116}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 0.01, "memory": 37651, "data_time": 0.71226, "loss_rpn_cls": 0.01015, "loss_rpn_bbox": 0.01104, "s0.loss_cls": 0.04769, "s0.acc": 96.64038, "s0.loss_bbox": 0.07025, "s1.loss_cls": 0.02377, "s1.acc": 96.74581, "s1.loss_bbox": 0.08693, "s2.loss_cls": 0.01325, "s2.acc": 96.2446, "s2.loss_bbox": 0.06422, "loss": 0.32729, "time": 5.38638}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 0.01, "memory": 37651, "data_time": 0.79467, "loss_rpn_cls": 0.01005, "loss_rpn_bbox": 0.01045, "s0.loss_cls": 0.04622, "s0.acc": 96.80005, "s0.loss_bbox": 0.06858, "s1.loss_cls": 0.02322, "s1.acc": 96.81264, "s1.loss_bbox": 0.08303, "s2.loss_cls": 0.01302, "s2.acc": 96.3317, "s2.loss_bbox": 0.06175, "loss": 0.31632, "time": 5.56724}
{"mode": "train", "epoch": 7, "iter": 200, "lr": 0.01, "memory": 37651, "data_time": 1.09413, "loss_rpn_cls": 0.01019, "loss_rpn_bbox": 0.01152, "s0.loss_cls": 0.05029, "s0.acc": 96.61963, "s0.loss_bbox": 0.07092, "s1.loss_cls": 0.02619, "s1.acc": 96.57475, "s1.loss_bbox": 0.08638, "s2.loss_cls": 0.01458, "s2.acc": 96.14612, "s2.loss_bbox": 0.06372, "loss": 0.33379, "time": 6.22758}
{"mode": "train", "epoch": 7, "iter": 250, "lr": 0.01, "memory": 37651, "data_time": 1.07293, "loss_rpn_cls": 0.01024, "loss_rpn_bbox": 0.01153, "s0.loss_cls": 0.04743, "s0.acc": 96.71008, "s0.loss_bbox": 0.06927, "s1.loss_cls": 0.02349, "s1.acc": 96.80616, "s1.loss_bbox": 0.08505, "s2.loss_cls": 0.01335, "s2.acc": 96.31043, "s2.loss_bbox": 0.06447, "loss": 0.32485, "time": 6.38445}
{"mode": "train", "epoch": 7, "iter": 300, "lr": 0.01, "memory": 37651, "data_time": 1.06426, "loss_rpn_cls": 0.00941, "loss_rpn_bbox": 0.0115, "s0.loss_cls": 0.04837, "s0.acc": 96.65491, "s0.loss_bbox": 0.07208, "s1.loss_cls": 0.02423, "s1.acc": 96.72524, "s1.loss_bbox": 0.08505, "s2.loss_cls": 0.01353, "s2.acc": 96.31738, "s2.loss_bbox": 0.06336, "loss": 0.32754, "time": 6.21263}
{"mode": "train", "epoch": 7, "iter": 350, "lr": 0.01, "memory": 37651, "data_time": 1.08043, "loss_rpn_cls": 0.00965, "loss_rpn_bbox": 0.01082, "s0.loss_cls": 0.04613, "s0.acc": 96.75281, "s0.loss_bbox": 0.06644, "s1.loss_cls": 0.0228, "s1.acc": 96.83811, "s1.loss_bbox": 0.08196, "s2.loss_cls": 0.01272, "s2.acc": 96.44636, "s2.loss_bbox": 0.06168, "loss": 0.3122, "time": 6.10998}
{"mode": "train", "epoch": 7, "iter": 400, "lr": 0.01, "memory": 37651, "data_time": 1.08956, "loss_rpn_cls": 0.00971, "loss_rpn_bbox": 0.01047, "s0.loss_cls": 0.0454, "s0.acc": 96.86938, "s0.loss_bbox": 0.06674, "s1.loss_cls": 0.02224, "s1.acc": 96.97739, "s1.loss_bbox": 0.08162, "s2.loss_cls": 0.01241, "s2.acc": 96.54711, "s2.loss_bbox": 0.06013, "loss": 0.30873, "time": 5.95865}
{"mode": "train", "epoch": 7, "iter": 450, "lr": 0.01, "memory": 37651, "data_time": 1.0664, "loss_rpn_cls": 0.01003, "loss_rpn_bbox": 0.01103, "s0.loss_cls": 0.04764, "s0.acc": 96.77014, "s0.loss_bbox": 0.0673, "s1.loss_cls": 0.02333, "s1.acc": 96.92382, "s1.loss_bbox": 0.08122, "s2.loss_cls": 0.01298, "s2.acc": 96.53863, "s2.loss_bbox": 0.06028, "loss": 0.31381, "time": 5.7288}
{"mode": "val", "epoch": 7, "iter": 4952, "lr": 0.01, "mAP": 0.75728, "AP50": 0.757}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 0.01, "memory": 37651, "data_time": 1.11736, "loss_rpn_cls": 0.00933, "loss_rpn_bbox": 0.01027, "s0.loss_cls": 0.04465, "s0.acc": 96.84937, "s0.loss_bbox": 0.0664, "s1.loss_cls": 0.02137, "s1.acc": 97.0735, "s1.loss_bbox": 0.08063, "s2.loss_cls": 0.01196, "s2.acc": 96.6941, "s2.loss_bbox": 0.06169, "loss": 0.30629, "time": 6.24107}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 0.01, "memory": 37651, "data_time": 1.1049, "loss_rpn_cls": 0.00886, "loss_rpn_bbox": 0.0098, "s0.loss_cls": 0.0434, "s0.acc": 96.96936, "s0.loss_bbox": 0.06424, "s1.loss_cls": 0.02138, "s1.acc": 97.0518, "s1.loss_bbox": 0.07888, "s2.loss_cls": 0.01175, "s2.acc": 96.71772, "s2.loss_bbox": 0.06011, "loss": 0.29842, "time": 5.86785}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 0.01, "memory": 37651, "data_time": 1.31464, "loss_rpn_cls": 0.0091, "loss_rpn_bbox": 0.0104, "s0.loss_cls": 0.04288, "s0.acc": 96.97339, "s0.loss_bbox": 0.06207, "s1.loss_cls": 0.02075, "s1.acc": 97.11579, "s1.loss_bbox": 0.07579, "s2.loss_cls": 0.01158, "s2.acc": 96.68783, "s2.loss_bbox": 0.05753, "loss": 0.29012, "time": 6.00672}
{"mode": "train", "epoch": 8, "iter": 200, "lr": 0.01, "memory": 37651, "data_time": 1.02882, "loss_rpn_cls": 0.00907, "loss_rpn_bbox": 0.01088, "s0.loss_cls": 0.04089, "s0.acc": 97.07764, "s0.loss_bbox": 0.06124, "s1.loss_cls": 0.02011, "s1.acc": 97.1921, "s1.loss_bbox": 0.07622, "s2.loss_cls": 0.01142, "s2.acc": 96.75319, "s2.loss_bbox": 0.05918, "loss": 0.28901, "time": 5.5901}
{"mode": "train", "epoch": 8, "iter": 250, "lr": 0.01, "memory": 37651, "data_time": 0.95174, "loss_rpn_cls": 0.0091, "loss_rpn_bbox": 0.01081, "s0.loss_cls": 0.04496, "s0.acc": 96.8446, "s0.loss_bbox": 0.06481, "s1.loss_cls": 0.02174, "s1.acc": 96.99884, "s1.loss_bbox": 0.07882, "s2.loss_cls": 0.01216, "s2.acc": 96.61442, "s2.loss_bbox": 0.06021, "loss": 0.30261, "time": 5.48703}
{"mode": "train", "epoch": 8, "iter": 300, "lr": 0.01, "memory": 37651, "data_time": 0.94537, "loss_rpn_cls": 0.00893, "loss_rpn_bbox": 0.01069, "s0.loss_cls": 0.04485, "s0.acc": 96.82825, "s0.loss_bbox": 0.06527, "s1.loss_cls": 0.02203, "s1.acc": 96.96888, "s1.loss_bbox": 0.08082, "s2.loss_cls": 0.01267, "s2.acc": 96.5252, "s2.loss_bbox": 0.06142, "loss": 0.30668, "time": 5.38906}
{"mode": "train", "epoch": 8, "iter": 350, "lr": 0.01, "memory": 37651, "data_time": 0.97575, "loss_rpn_cls": 0.00919, "loss_rpn_bbox": 0.01067, "s0.loss_cls": 0.04338, "s0.acc": 96.94763, "s0.loss_bbox": 0.06433, "s1.loss_cls": 0.02128, "s1.acc": 97.07467, "s1.loss_bbox": 0.07722, "s2.loss_cls": 0.01185, "s2.acc": 96.67967, "s2.loss_bbox": 0.05844, "loss": 0.29637, "time": 5.62115}
{"mode": "train", "epoch": 8, "iter": 400, "lr": 0.01, "memory": 37651, "data_time": 1.21536, "loss_rpn_cls": 0.00928, "loss_rpn_bbox": 0.0107, "s0.loss_cls": 0.04292, "s0.acc": 97.02539, "s0.loss_bbox": 0.06282, "s1.loss_cls": 0.02091, "s1.acc": 97.13256, "s1.loss_bbox": 0.07708, "s2.loss_cls": 0.01165, "s2.acc": 96.69692, "s2.loss_bbox": 0.05914, "loss": 0.2945, "time": 6.27955}
{"mode": "train", "epoch": 8, "iter": 450, "lr": 0.01, "memory": 37651, "data_time": 1.07203, "loss_rpn_cls": 0.00942, "loss_rpn_bbox": 0.01041, "s0.loss_cls": 0.04337, "s0.acc": 96.94458, "s0.loss_bbox": 0.06479, "s1.loss_cls": 0.02148, "s1.acc": 97.03296, "s1.loss_bbox": 0.07958, "s2.loss_cls": 0.01196, "s2.acc": 96.62643, "s2.loss_bbox": 0.06099, "loss": 0.30199, "time": 6.30735}
{"mode": "val", "epoch": 8, "iter": 4952, "lr": 0.01, "mAP": 0.76906, "AP50": 0.769}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 0.001, "memory": 37651, "data_time": 1.07006, "loss_rpn_cls": 0.00766, "loss_rpn_bbox": 0.00874, "s0.loss_cls": 0.03629, "s0.acc": 97.37671, "s0.loss_bbox": 0.05269, "s1.loss_cls": 0.01749, "s1.acc": 97.5488, "s1.loss_bbox": 0.06576, "s2.loss_cls": 0.00981, "s2.acc": 97.2184, "s2.loss_bbox": 0.05192, "loss": 0.25037, "time": 6.1173}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 0.001, "memory": 37651, "data_time": 1.05431, "loss_rpn_cls": 0.00743, "loss_rpn_bbox": 0.00974, "s0.loss_cls": 0.03667, "s0.acc": 97.30518, "s0.loss_bbox": 0.05483, "s1.loss_cls": 0.01718, "s1.acc": 97.52749, "s1.loss_bbox": 0.06661, "s2.loss_cls": 0.0094, "s2.acc": 97.293, "s2.loss_bbox": 0.05197, "loss": 0.25383, "time": 6.19918}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 0.001, "memory": 37651, "data_time": 1.0752, "loss_rpn_cls": 0.00807, "loss_rpn_bbox": 0.0098, "s0.loss_cls": 0.03658, "s0.acc": 97.29944, "s0.loss_bbox": 0.05411, "s1.loss_cls": 0.01711, "s1.acc": 97.52176, "s1.loss_bbox": 0.0658, "s2.loss_cls": 0.00964, "s2.acc": 97.19924, "s2.loss_bbox": 0.05178, "loss": 0.25289, "time": 6.38399}
{"mode": "train", "epoch": 9, "iter": 200, "lr": 0.001, "memory": 37651, "data_time": 1.2664, "loss_rpn_cls": 0.00722, "loss_rpn_bbox": 0.00894, "s0.loss_cls": 0.03514, "s0.acc": 97.44641, "s0.loss_bbox": 0.0526, "s1.loss_cls": 0.0161, "s1.acc": 97.66405, "s1.loss_bbox": 0.06203, "s2.loss_cls": 0.00888, "s2.acc": 97.44645, "s2.loss_bbox": 0.04925, "loss": 0.24017, "time": 6.92658}
{"mode": "train", "epoch": 9, "iter": 250, "lr": 0.001, "memory": 37651, "data_time": 1.39586, "loss_rpn_cls": 0.00768, "loss_rpn_bbox": 0.00881, "s0.loss_cls": 0.03401, "s0.acc": 97.51428, "s0.loss_bbox": 0.05114, "s1.loss_cls": 0.01595, "s1.acc": 97.68818, "s1.loss_bbox": 0.06261, "s2.loss_cls": 0.00876, "s2.acc": 97.44288, "s2.loss_bbox": 0.04927, "loss": 0.23822, "time": 7.03895}
{"mode": "train", "epoch": 9, "iter": 300, "lr": 0.001, "memory": 37651, "data_time": 1.50758, "loss_rpn_cls": 0.00732, "loss_rpn_bbox": 0.00901, "s0.loss_cls": 0.03443, "s0.acc": 97.44128, "s0.loss_bbox": 0.05203, "s1.loss_cls": 0.01595, "s1.acc": 97.64906, "s1.loss_bbox": 0.06304, "s2.loss_cls": 0.00883, "s2.acc": 97.43853, "s2.loss_bbox": 0.04977, "loss": 0.24039, "time": 6.78624}
{"mode": "train", "epoch": 9, "iter": 350, "lr": 0.001, "memory": 37651, "data_time": 1.40138, "loss_rpn_cls": 0.00747, "loss_rpn_bbox": 0.00906, "s0.loss_cls": 0.03499, "s0.acc": 97.42456, "s0.loss_bbox": 0.05173, "s1.loss_cls": 0.01601, "s1.acc": 97.6573, "s1.loss_bbox": 0.06273, "s2.loss_cls": 0.00877, "s2.acc": 97.4301, "s2.loss_bbox": 0.04958, "loss": 0.24034, "time": 6.62396}
{"mode": "train", "epoch": 9, "iter": 400, "lr": 0.001, "memory": 37651, "data_time": 1.48472, "loss_rpn_cls": 0.00679, "loss_rpn_bbox": 0.00834, "s0.loss_cls": 0.03364, "s0.acc": 97.50415, "s0.loss_bbox": 0.05011, "s1.loss_cls": 0.01552, "s1.acc": 97.74914, "s1.loss_bbox": 0.05995, "s2.loss_cls": 0.00869, "s2.acc": 97.47589, "s2.loss_bbox": 0.04841, "loss": 0.23146, "time": 6.56183}
{"mode": "train", "epoch": 9, "iter": 450, "lr": 0.001, "memory": 37651, "data_time": 1.21299, "loss_rpn_cls": 0.00734, "loss_rpn_bbox": 0.00863, "s0.loss_cls": 0.03504, "s0.acc": 97.42517, "s0.loss_bbox": 0.05336, "s1.loss_cls": 0.01605, "s1.acc": 97.64875, "s1.loss_bbox": 0.06349, "s2.loss_cls": 0.00884, "s2.acc": 97.41025, "s2.loss_bbox": 0.0498, "loss": 0.24254, "time": 6.23712}
{"mode": "val", "epoch": 9, "iter": 4952, "lr": 0.001, "mAP": 0.78431, "AP50": 0.784}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 0.001, "memory": 37651, "data_time": 1.25807, "loss_rpn_cls": 0.00711, "loss_rpn_bbox": 0.00874, "s0.loss_cls": 0.03421, "s0.acc": 97.47388, "s0.loss_bbox": 0.05154, "s1.loss_cls": 0.01585, "s1.acc": 97.68012, "s1.loss_bbox": 0.06144, "s2.loss_cls": 0.00884, "s2.acc": 97.39376, "s2.loss_bbox": 0.04832, "loss": 0.23604, "time": 6.58916}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 0.001, "memory": 37651, "data_time": 1.11482, "loss_rpn_cls": 0.00692, "loss_rpn_bbox": 0.00921, "s0.loss_cls": 0.03395, "s0.acc": 97.46899, "s0.loss_bbox": 0.04997, "s1.loss_cls": 0.01529, "s1.acc": 97.75329, "s1.loss_bbox": 0.06018, "s2.loss_cls": 0.00843, "s2.acc": 97.4907, "s2.loss_bbox": 0.04771, "loss": 0.23166, "time": 6.18157}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 0.001, "memory": 37651, "data_time": 1.07549, "loss_rpn_cls": 0.00767, "loss_rpn_bbox": 0.0094, "s0.loss_cls": 0.03447, "s0.acc": 97.44482, "s0.loss_bbox": 0.05143, "s1.loss_cls": 0.01557, "s1.acc": 97.73277, "s1.loss_bbox": 0.06106, "s2.loss_cls": 0.0086, "s2.acc": 97.48058, "s2.loss_bbox": 0.0481, "loss": 0.23631, "time": 6.01166}
{"mode": "train", "epoch": 10, "iter": 200, "lr": 0.001, "memory": 37651, "data_time": 1.04681, "loss_rpn_cls": 0.00772, "loss_rpn_bbox": 0.00906, "s0.loss_cls": 0.03206, "s0.acc": 97.62305, "s0.loss_bbox": 0.04811, "s1.loss_cls": 0.01517, "s1.acc": 97.79762, "s1.loss_bbox": 0.05791, "s2.loss_cls": 0.00849, "s2.acc": 97.54036, "s2.loss_bbox": 0.04673, "loss": 0.22524, "time": 6.19446}
{"mode": "train", "epoch": 10, "iter": 250, "lr": 0.001, "memory": 37651, "data_time": 1.37861, "loss_rpn_cls": 0.00761, "loss_rpn_bbox": 0.00875, "s0.loss_cls": 0.03412, "s0.acc": 97.48596, "s0.loss_bbox": 0.05091, "s1.loss_cls": 0.01554, "s1.acc": 97.74455, "s1.loss_bbox": 0.05961, "s2.loss_cls": 0.0085, "s2.acc": 97.51777, "s2.loss_bbox": 0.04756, "loss": 0.23261, "time": 6.6472}
{"mode": "train", "epoch": 10, "iter": 300, "lr": 0.001, "memory": 37651, "data_time": 1.18906, "loss_rpn_cls": 0.00793, "loss_rpn_bbox": 0.00901, "s0.loss_cls": 0.03406, "s0.acc": 97.47693, "s0.loss_bbox": 0.05096, "s1.loss_cls": 0.01571, "s1.acc": 97.71143, "s1.loss_bbox": 0.0613, "s2.loss_cls": 0.00872, "s2.acc": 97.44591, "s2.loss_bbox": 0.04806, "loss": 0.23575, "time": 6.52398}
{"mode": "train", "epoch": 10, "iter": 350, "lr": 0.001, "memory": 37651, "data_time": 1.24885, "loss_rpn_cls": 0.00713, "loss_rpn_bbox": 0.00821, "s0.loss_cls": 0.03194, "s0.acc": 97.64807, "s0.loss_bbox": 0.04669, "s1.loss_cls": 0.01449, "s1.acc": 97.90191, "s1.loss_bbox": 0.05611, "s2.loss_cls": 0.00797, "s2.acc": 97.68125, "s2.loss_bbox": 0.04469, "loss": 0.21722, "time": 6.43325}
{"mode": "train", "epoch": 10, "iter": 400, "lr": 0.001, "memory": 37651, "data_time": 1.18184, "loss_rpn_cls": 0.00736, "loss_rpn_bbox": 0.00851, "s0.loss_cls": 0.03422, "s0.acc": 97.43994, "s0.loss_bbox": 0.05159, "s1.loss_cls": 0.01561, "s1.acc": 97.70425, "s1.loss_bbox": 0.06106, "s2.loss_cls": 0.00875, "s2.acc": 97.36646, "s2.loss_bbox": 0.0479, "loss": 0.235, "time": 6.68329}
{"mode": "train", "epoch": 10, "iter": 450, "lr": 0.001, "memory": 37651, "data_time": 1.25835, "loss_rpn_cls": 0.00698, "loss_rpn_bbox": 0.00883, "s0.loss_cls": 0.03335, "s0.acc": 97.50427, "s0.loss_bbox": 0.05093, "s1.loss_cls": 0.01521, "s1.acc": 97.76591, "s1.loss_bbox": 0.05966, "s2.loss_cls": 0.00837, "s2.acc": 97.52091, "s2.loss_bbox": 0.04758, "loss": 0.23091, "time": 6.58443}
{"mode": "val", "epoch": 10, "iter": 4952, "lr": 0.001, "mAP": 0.78276, "AP50": 0.783}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 0.001, "memory": 37651, "data_time": 1.12851, "loss_rpn_cls": 0.00692, "loss_rpn_bbox": 0.00888, "s0.loss_cls": 0.03291, "s0.acc": 97.55969, "s0.loss_bbox": 0.04947, "s1.loss_cls": 0.01484, "s1.acc": 97.80589, "s1.loss_bbox": 0.05858, "s2.loss_cls": 0.00831, "s2.acc": 97.57173, "s2.loss_bbox": 0.0463, "loss": 0.22622, "time": 6.11413}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 0.001, "memory": 37651, "data_time": 1.06301, "loss_rpn_cls": 0.0074, "loss_rpn_bbox": 0.00922, "s0.loss_cls": 0.03301, "s0.acc": 97.56873, "s0.loss_bbox": 0.05016, "s1.loss_cls": 0.0151, "s1.acc": 97.7798, "s1.loss_bbox": 0.05832, "s2.loss_cls": 0.0083, "s2.acc": 97.59663, "s2.loss_bbox": 0.04624, "loss": 0.22775, "time": 6.32399}
{"mode": "train", "epoch": 11, "iter": 150, "lr": 0.001, "memory": 37651, "data_time": 1.27571, "loss_rpn_cls": 0.00723, "loss_rpn_bbox": 0.00949, "s0.loss_cls": 0.03358, "s0.acc": 97.48657, "s0.loss_bbox": 0.05042, "s1.loss_cls": 0.01515, "s1.acc": 97.75845, "s1.loss_bbox": 0.059, "s2.loss_cls": 0.00837, "s2.acc": 97.5568, "s2.loss_bbox": 0.04705, "loss": 0.2303, "time": 6.52979}
{"mode": "train", "epoch": 11, "iter": 200, "lr": 0.001, "memory": 37651, "data_time": 1.28494, "loss_rpn_cls": 0.00721, "loss_rpn_bbox": 0.00856, "s0.loss_cls": 0.03422, "s0.acc": 97.49866, "s0.loss_bbox": 0.05123, "s1.loss_cls": 0.01581, "s1.acc": 97.69725, "s1.loss_bbox": 0.05891, "s2.loss_cls": 0.00849, "s2.acc": 97.54209, "s2.loss_bbox": 0.04663, "loss": 0.23106, "time": 7.02285}
{"mode": "train", "epoch": 11, "iter": 250, "lr": 0.001, "memory": 37651, "data_time": 1.07097, "loss_rpn_cls": 0.00676, "loss_rpn_bbox": 0.00855, "s0.loss_cls": 0.03201, "s0.acc": 97.64758, "s0.loss_bbox": 0.04647, "s1.loss_cls": 0.01413, "s1.acc": 97.92453, "s1.loss_bbox": 0.05486, "s2.loss_cls": 0.00779, "s2.acc": 97.72801, "s2.loss_bbox": 0.04507, "loss": 0.21564, "time": 6.54013}
{"mode": "train", "epoch": 11, "iter": 300, "lr": 0.001, "memory": 37651, "data_time": 1.42928, "loss_rpn_cls": 0.00694, "loss_rpn_bbox": 0.00861, "s0.loss_cls": 0.03123, "s0.acc": 97.67383, "s0.loss_bbox": 0.04582, "s1.loss_cls": 0.0142, "s1.acc": 97.9106, "s1.loss_bbox": 0.0545, "s2.loss_cls": 0.00777, "s2.acc": 97.74877, "s2.loss_bbox": 0.04369, "loss": 0.21276, "time": 6.59468}
{"mode": "train", "epoch": 11, "iter": 350, "lr": 0.001, "memory": 37651, "data_time": 1.0415, "loss_rpn_cls": 0.00714, "loss_rpn_bbox": 0.00904, "s0.loss_cls": 0.03315, "s0.acc": 97.51086, "s0.loss_bbox": 0.04999, "s1.loss_cls": 0.01499, "s1.acc": 97.78796, "s1.loss_bbox": 0.05774, "s2.loss_cls": 0.00825, "s2.acc": 97.55523, "s2.loss_bbox": 0.04639, "loss": 0.22669, "time": 6.06808}
{"mode": "train", "epoch": 11, "iter": 400, "lr": 0.001, "memory": 37651, "data_time": 1.06468, "loss_rpn_cls": 0.00683, "loss_rpn_bbox": 0.00879, "s0.loss_cls": 0.03198, "s0.acc": 97.61902, "s0.loss_bbox": 0.04727, "s1.loss_cls": 0.01436, "s1.acc": 97.88517, "s1.loss_bbox": 0.05543, "s2.loss_cls": 0.00796, "s2.acc": 97.63578, "s2.loss_bbox": 0.04458, "loss": 0.2172, "time": 5.99638}
{"mode": "train", "epoch": 11, "iter": 450, "lr": 0.001, "memory": 37651, "data_time": 1.07541, "loss_rpn_cls": 0.00672, "loss_rpn_bbox": 0.0083, "s0.loss_cls": 0.03295, "s0.acc": 97.49963, "s0.loss_bbox": 0.04944, "s1.loss_cls": 0.01475, "s1.acc": 97.82611, "s1.loss_bbox": 0.05805, "s2.loss_cls": 0.00816, "s2.acc": 97.60398, "s2.loss_bbox": 0.04689, "loss": 0.22527, "time": 6.03272}
{"mode": "val", "epoch": 11, "iter": 4952, "lr": 0.001, "mAP": 0.78229, "AP50": 0.782}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 0.0001, "memory": 37651, "data_time": 1.22958, "loss_rpn_cls": 0.00681, "loss_rpn_bbox": 0.00878, "s0.loss_cls": 0.03352, "s0.acc": 97.5072, "s0.loss_bbox": 0.04986, "s1.loss_cls": 0.01508, "s1.acc": 97.76634, "s1.loss_bbox": 0.05911, "s2.loss_cls": 0.00833, "s2.acc": 97.54374, "s2.loss_bbox": 0.04698, "loss": 0.22846, "time": 6.72226}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.0001, "memory": 37651, "data_time": 1.04665, "loss_rpn_cls": 0.00677, "loss_rpn_bbox": 0.0081, "s0.loss_cls": 0.03139, "s0.acc": 97.64734, "s0.loss_bbox": 0.04664, "s1.loss_cls": 0.01417, "s1.acc": 97.90442, "s1.loss_bbox": 0.05456, "s2.loss_cls": 0.00773, "s2.acc": 97.75494, "s2.loss_bbox": 0.04373, "loss": 0.2131, "time": 6.35403}
{"mode": "train", "epoch": 12, "iter": 150, "lr": 0.0001, "memory": 37651, "data_time": 1.00987, "loss_rpn_cls": 0.00673, "loss_rpn_bbox": 0.00864, "s0.loss_cls": 0.03184, "s0.acc": 97.60266, "s0.loss_bbox": 0.04723, "s1.loss_cls": 0.01441, "s1.acc": 97.87877, "s1.loss_bbox": 0.05566, "s2.loss_cls": 0.00795, "s2.acc": 97.65947, "s2.loss_bbox": 0.04425, "loss": 0.2167, "time": 6.19751}
{"mode": "train", "epoch": 12, "iter": 200, "lr": 0.0001, "memory": 37651, "data_time": 1.01967, "loss_rpn_cls": 0.00704, "loss_rpn_bbox": 0.00875, "s0.loss_cls": 0.03088, "s0.acc": 97.7063, "s0.loss_bbox": 0.04644, "s1.loss_cls": 0.01415, "s1.acc": 97.91718, "s1.loss_bbox": 0.0548, "s2.loss_cls": 0.00798, "s2.acc": 97.63067, "s2.loss_bbox": 0.04407, "loss": 0.2141, "time": 6.09153}
{"mode": "train", "epoch": 12, "iter": 250, "lr": 0.0001, "memory": 37651, "data_time": 1.08961, "loss_rpn_cls": 0.00633, "loss_rpn_bbox": 0.00799, "s0.loss_cls": 0.03162, "s0.acc": 97.66101, "s0.loss_bbox": 0.04527, "s1.loss_cls": 0.01421, "s1.acc": 97.92788, "s1.loss_bbox": 0.05281, "s2.loss_cls": 0.00773, "s2.acc": 97.74354, "s2.loss_bbox": 0.04288, "loss": 0.20883, "time": 6.37885}
{"mode": "train", "epoch": 12, "iter": 300, "lr": 0.0001, "memory": 37651, "data_time": 1.0189, "loss_rpn_cls": 0.00695, "loss_rpn_bbox": 0.00907, "s0.loss_cls": 0.03211, "s0.acc": 97.60547, "s0.loss_bbox": 0.04866, "s1.loss_cls": 0.01463, "s1.acc": 97.84154, "s1.loss_bbox": 0.05478, "s2.loss_cls": 0.00803, "s2.acc": 97.62244, "s2.loss_bbox": 0.04345, "loss": 0.21766, "time": 6.06944}
{"mode": "train", "epoch": 12, "iter": 350, "lr": 0.0001, "memory": 37651, "data_time": 1.05199, "loss_rpn_cls": 0.00637, "loss_rpn_bbox": 0.00821, "s0.loss_cls": 0.0321, "s0.acc": 97.5885, "s0.loss_bbox": 0.0472, "s1.loss_cls": 0.01446, "s1.acc": 97.84414, "s1.loss_bbox": 0.05444, "s2.loss_cls": 0.00799, "s2.acc": 97.63606, "s2.loss_bbox": 0.04329, "loss": 0.21407, "time": 6.29386}
{"mode": "train", "epoch": 12, "iter": 400, "lr": 0.0001, "memory": 37651, "data_time": 1.13689, "loss_rpn_cls": 0.00708, "loss_rpn_bbox": 0.00895, "s0.loss_cls": 0.0323, "s0.acc": 97.56177, "s0.loss_bbox": 0.04852, "s1.loss_cls": 0.01409, "s1.acc": 97.91477, "s1.loss_bbox": 0.05563, "s2.loss_cls": 0.00758, "s2.acc": 97.73509, "s2.loss_bbox": 0.04425, "loss": 0.2184, "time": 6.52555}
{"mode": "train", "epoch": 12, "iter": 450, "lr": 0.0001, "memory": 37651, "data_time": 1.1645, "loss_rpn_cls": 0.0075, "loss_rpn_bbox": 0.00942, "s0.loss_cls": 0.0332, "s0.acc": 97.52869, "s0.loss_bbox": 0.05007, "s1.loss_cls": 0.01506, "s1.acc": 97.79303, "s1.loss_bbox": 0.0581, "s2.loss_cls": 0.00834, "s2.acc": 97.53659, "s2.loss_bbox": 0.04605, "loss": 0.22774, "time": 6.35113}
{"mode": "val", "epoch": 12, "iter": 4952, "lr": 0.0001, "mAP": 0.78284, "AP50": 0.783}
