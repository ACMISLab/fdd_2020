{"env_info": "sys.platform: linux\nPython: 3.8.16 (default, Mar  2 2023, 03:21:46) [GCC 11.2.0]\nCUDA available: True\nGPU 0: NVIDIA RTX A6000\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 11.4, V11.4.152\nGCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\nPyTorch: 1.11.0+cu113\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.5.2 (Git Hash a9302535553c73243c632ad3c4c80beec3d19a1e)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.3\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.2\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, \n\nTorchVision: 0.12.0+cu113\nOpenCV: 4.7.0\nMMCV: 1.7.1\nMMCV Compiler: GCC 9.3\nMMCV CUDA Compiler: 11.3\nMMDetection: 2.25.0+", "config": "model = dict(\n    type='FasterRCNN',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch',\n        init_cfg=dict(type='Pretrained', checkpoint='torchvision://resnet50')),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n    roi_head=dict(\n        type='DynamicRoIHead',\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCBBoxHead',\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=20,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=False,\n            loss_cls=dict(type='DKLoss', use_sigmoid=False, loss_weight=1.0),\n            loss_bbox=dict(type='SmoothL1Loss', loss_weight=1.0, beta=1.0))),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                pos_fraction=0.5,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=False),\n            allowed_border=-1,\n            pos_weight=-1,\n            debug=False),\n        rpn_proposal=dict(\n            nms_pre=2000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.85),\n            min_bbox_size=0),\n        rcnn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.5,\n                neg_iou_thr=0.5,\n                min_pos_iou=0.5,\n                match_low_quality=False,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=512,\n                pos_fraction=0.25,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=True),\n            pos_weight=-1,\n            debug=False,\n            dynamic_rcnn=dict(\n                iou_topk=75,\n                beta_topk=10,\n                update_iter_interval=100,\n                initial_iou=0.4,\n                initial_beta=1.0))),\n    test_cfg=dict(\n        rpn=dict(\n            nms_pre=1000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.85),\n            min_bbox_size=0),\n        rcnn=dict(\n            score_thr=0.05,\n            nms=dict(type='nms', iou_threshold=0.5),\n            max_per_img=100)))\ndataset_type = 'VOCDataset'\ndata_root = 'data/VOCdevkit/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ndata = dict(\n    samples_per_gpu=32,\n    workers_per_gpu=0,\n    train=dict(\n        type='RepeatDataset',\n        times=3,\n        dataset=dict(\n            type='ClassBalancedDataset',\n            oversample_thr=0.01,\n            dataset=dict(\n                type='VOCDataset',\n                ann_file=[\n                    'data/VOCdevkit/VOC2007/ImageSets/Main/trainval.txt'\n                ],\n                img_prefix=['data/VOCdevkit/VOC2007/'],\n                pipeline=[\n                    dict(type='LoadImageFromFile'),\n                    dict(type='LoadAnnotations', with_bbox=True),\n                    dict(\n                        type='Resize',\n                        img_scale=[(480, 1000), (512, 1000), (544, 1000),\n                                   (576, 1000), (608, 1000), (640, 1000),\n                                   (672, 1000), (704, 1000), (736, 1000),\n                                   (768, 1000), (800, 1000)],\n                        multiscale_mode='value',\n                        keep_ratio=True),\n                    dict(type='RandomFlip', flip_ratio=0.5),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n                ]))),\n    val=dict(\n        type='VOCDataset',\n        ann_file='data/VOCdevkit/VOC2007/ImageSets/Main/test.txt',\n        img_prefix='data/VOCdevkit/VOC2007/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=[(544, 1000), (640, 1000), (736, 1000), (800, 1000)],\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='VOCDataset',\n        ann_file='data/VOCdevkit/VOC2007/ImageSets/Main/test.txt',\n        img_prefix='data/VOCdevkit/VOC2007/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=[(544, 1000), (640, 1000), (736, 1000), (800, 1000)],\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(interval=1, metric='mAP')\noptimizer = dict(type='SGD', lr=0.005, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\nauto_scale_lr = dict(enable=True, base_batch_size=16)\nwork_dir = './work_dirs/dynamic_rcnn_r50_fpn_1x_coco'\nauto_resume = False\ngpu_ids = [0]\n", "seed": 1848043090, "exp_name": "dynamic_rcnn_r50_fpn_1x_coco.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00099, "memory": 36575, "data_time": 0.69745, "loss_rpn_cls": 0.47534, "loss_rpn_bbox": 0.02938, "loss_cls": 0.52761, "acc": 90.604, "loss_bbox": 0.01509, "loss": 1.04742, "time": 2.36419}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00199, "memory": 36575, "data_time": 0.67722, "loss_rpn_cls": 0.0937, "loss_rpn_bbox": 0.02574, "loss_cls": 0.29473, "acc": 94.05493, "loss_bbox": 0.15159, "loss": 0.56575, "time": 2.56472}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00299, "memory": 36575, "data_time": 0.64665, "loss_rpn_cls": 0.0686, "loss_rpn_bbox": 0.02515, "loss_cls": 0.57575, "acc": 84.93103, "loss_bbox": 0.59396, "loss": 1.26346, "time": 2.91012}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.00399, "memory": 36575, "data_time": 0.70206, "loss_rpn_cls": 0.05734, "loss_rpn_bbox": 0.02607, "loss_cls": 0.5109, "acc": 84.08252, "loss_bbox": 0.6088, "loss": 1.2031, "time": 3.08308}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.00499, "memory": 36575, "data_time": 0.76739, "loss_rpn_cls": 0.04807, "loss_rpn_bbox": 0.02689, "loss_cls": 0.42636, "acc": 83.03809, "loss_bbox": 0.67968, "loss": 1.18099, "time": 3.33663}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.00598, "memory": 36575, "data_time": 0.7604, "loss_rpn_cls": 0.04034, "loss_rpn_bbox": 0.02529, "loss_cls": 0.37411, "acc": 83.25842, "loss_bbox": 0.63558, "loss": 1.07533, "time": 3.34428}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.00698, "memory": 36575, "data_time": 0.80088, "loss_rpn_cls": 0.03439, "loss_rpn_bbox": 0.02414, "loss_cls": 0.29723, "acc": 85.73779, "loss_bbox": 0.4469, "loss": 0.80265, "time": 3.31392}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.00798, "memory": 36575, "data_time": 0.83192, "loss_rpn_cls": 0.03037, "loss_rpn_bbox": 0.0237, "loss_cls": 0.28891, "acc": 85.6731, "loss_bbox": 0.43623, "loss": 0.77923, "time": 3.40054}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.00898, "memory": 36575, "data_time": 0.72706, "loss_rpn_cls": 0.02755, "loss_rpn_bbox": 0.02134, "loss_cls": 0.24868, "acc": 87.40051, "loss_bbox": 0.37306, "loss": 0.67063, "time": 3.14768}
{"mode": "val", "epoch": 1, "iter": 4952, "lr": 0.0094, "mAP": 0.51059, "AP50": 0.511}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.01, "memory": 36575, "data_time": 0.72826, "loss_rpn_cls": 0.02785, "loss_rpn_bbox": 0.02208, "loss_cls": 0.24094, "acc": 87.12732, "loss_bbox": 0.37085, "loss": 0.66172, "time": 3.14292}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.01, "memory": 36575, "data_time": 0.70557, "loss_rpn_cls": 0.02403, "loss_rpn_bbox": 0.0211, "loss_cls": 0.22497, "acc": 87.49414, "loss_bbox": 0.3587, "loss": 0.62881, "time": 3.15919}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.01, "memory": 36575, "data_time": 0.74429, "loss_rpn_cls": 0.02327, "loss_rpn_bbox": 0.02098, "loss_cls": 0.20266, "acc": 88.13708, "loss_bbox": 0.32952, "loss": 0.57642, "time": 3.22759}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.01, "memory": 36575, "data_time": 0.79078, "loss_rpn_cls": 0.02206, "loss_rpn_bbox": 0.02099, "loss_cls": 0.20341, "acc": 88.30127, "loss_bbox": 0.31727, "loss": 0.56373, "time": 3.2873}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.01, "memory": 36575, "data_time": 0.79268, "loss_rpn_cls": 0.02222, "loss_rpn_bbox": 0.02005, "loss_cls": 0.19405, "acc": 88.74512, "loss_bbox": 0.309, "loss": 0.54531, "time": 3.2756}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.01, "memory": 36575, "data_time": 0.6683, "loss_rpn_cls": 0.02112, "loss_rpn_bbox": 0.02065, "loss_cls": 0.18504, "acc": 88.78601, "loss_bbox": 0.2922, "loss": 0.51902, "time": 3.08033}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.01, "memory": 36575, "data_time": 0.7504, "loss_rpn_cls": 0.01993, "loss_rpn_bbox": 0.01997, "loss_cls": 0.17165, "acc": 89.46191, "loss_bbox": 0.2812, "loss": 0.49274, "time": 3.12999}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 0.01, "memory": 36575, "data_time": 0.70106, "loss_rpn_cls": 0.01961, "loss_rpn_bbox": 0.01947, "loss_cls": 0.16982, "acc": 89.34937, "loss_bbox": 0.28277, "loss": 0.49167, "time": 3.08404}
{"mode": "train", "epoch": 2, "iter": 450, "lr": 0.01, "memory": 36575, "data_time": 0.69575, "loss_rpn_cls": 0.02031, "loss_rpn_bbox": 0.01989, "loss_cls": 0.16957, "acc": 89.56433, "loss_bbox": 0.27213, "loss": 0.4819, "time": 3.0774}
{"mode": "val", "epoch": 2, "iter": 4952, "lr": 0.01, "mAP": 0.65145, "AP50": 0.651}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.01, "memory": 36575, "data_time": 0.79802, "loss_rpn_cls": 0.01705, "loss_rpn_bbox": 0.0186, "loss_cls": 0.15453, "acc": 90.0166, "loss_bbox": 0.25622, "loss": 0.44639, "time": 3.25778}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.01, "memory": 36575, "data_time": 0.76467, "loss_rpn_cls": 0.01796, "loss_rpn_bbox": 0.01906, "loss_cls": 0.14744, "acc": 90.43274, "loss_bbox": 0.25196, "loss": 0.43642, "time": 3.33054}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.01, "memory": 36575, "data_time": 0.80241, "loss_rpn_cls": 0.01742, "loss_rpn_bbox": 0.01959, "loss_cls": 0.1523, "acc": 90.17188, "loss_bbox": 0.25787, "loss": 0.44718, "time": 3.31504}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.01, "memory": 36575, "data_time": 0.82273, "loss_rpn_cls": 0.01766, "loss_rpn_bbox": 0.01874, "loss_cls": 0.1441, "acc": 90.6156, "loss_bbox": 0.2396, "loss": 0.42009, "time": 3.22344}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 0.01, "memory": 36575, "data_time": 0.8007, "loss_rpn_cls": 0.01666, "loss_rpn_bbox": 0.01973, "loss_cls": 0.14422, "acc": 90.47168, "loss_bbox": 0.24265, "loss": 0.42327, "time": 3.27792}
{"mode": "train", "epoch": 3, "iter": 300, "lr": 0.01, "memory": 36575, "data_time": 0.75018, "loss_rpn_cls": 0.0169, "loss_rpn_bbox": 0.0198, "loss_cls": 0.14501, "acc": 90.41602, "loss_bbox": 0.24184, "loss": 0.42356, "time": 3.19592}
{"mode": "train", "epoch": 3, "iter": 350, "lr": 0.01, "memory": 36575, "data_time": 0.72167, "loss_rpn_cls": 0.01625, "loss_rpn_bbox": 0.0197, "loss_cls": 0.14324, "acc": 90.57593, "loss_bbox": 0.23721, "loss": 0.4164, "time": 3.10869}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.01, "memory": 36575, "data_time": 0.74278, "loss_rpn_cls": 0.01568, "loss_rpn_bbox": 0.01732, "loss_cls": 0.12866, "acc": 91.39038, "loss_bbox": 0.21545, "loss": 0.37711, "time": 3.12031}
{"mode": "train", "epoch": 3, "iter": 450, "lr": 0.01, "memory": 36575, "data_time": 0.7448, "loss_rpn_cls": 0.01506, "loss_rpn_bbox": 0.01864, "loss_cls": 0.12908, "acc": 91.35632, "loss_bbox": 0.22003, "loss": 0.38281, "time": 3.15783}
{"mode": "val", "epoch": 3, "iter": 4952, "lr": 0.01, "mAP": 0.71302, "AP50": 0.713}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 0.01, "memory": 36575, "data_time": 1.09206, "loss_rpn_cls": 0.01357, "loss_rpn_bbox": 0.01762, "loss_cls": 0.12515, "acc": 91.46399, "loss_bbox": 0.21895, "loss": 0.37528, "time": 3.54894}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.01, "memory": 36575, "data_time": 1.05504, "loss_rpn_cls": 0.01468, "loss_rpn_bbox": 0.01757, "loss_cls": 0.12591, "acc": 91.32776, "loss_bbox": 0.21796, "loss": 0.37613, "time": 3.44085}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 0.01, "memory": 36575, "data_time": 1.099, "loss_rpn_cls": 0.01455, "loss_rpn_bbox": 0.0185, "loss_cls": 0.12639, "acc": 91.2262, "loss_bbox": 0.21389, "loss": 0.37334, "time": 3.53021}
{"mode": "train", "epoch": 4, "iter": 200, "lr": 0.01, "memory": 36575, "data_time": 1.10537, "loss_rpn_cls": 0.01427, "loss_rpn_bbox": 0.01731, "loss_cls": 0.11952, "acc": 91.67651, "loss_bbox": 0.20976, "loss": 0.36087, "time": 3.50892}
{"mode": "train", "epoch": 4, "iter": 250, "lr": 0.01, "memory": 36575, "data_time": 1.09164, "loss_rpn_cls": 0.01346, "loss_rpn_bbox": 0.01761, "loss_cls": 0.11419, "acc": 92.19446, "loss_bbox": 0.19335, "loss": 0.33861, "time": 3.48949}
{"mode": "train", "epoch": 4, "iter": 300, "lr": 0.01, "memory": 36575, "data_time": 1.02957, "loss_rpn_cls": 0.01271, "loss_rpn_bbox": 0.01712, "loss_cls": 0.11532, "acc": 91.97705, "loss_bbox": 0.19695, "loss": 0.3421, "time": 3.34313}
{"mode": "train", "epoch": 4, "iter": 350, "lr": 0.01, "memory": 36575, "data_time": 0.95942, "loss_rpn_cls": 0.01289, "loss_rpn_bbox": 0.01672, "loss_cls": 0.11222, "acc": 92.19958, "loss_bbox": 0.19742, "loss": 0.33926, "time": 3.33802}
{"mode": "train", "epoch": 4, "iter": 400, "lr": 0.01, "memory": 36575, "data_time": 1.05098, "loss_rpn_cls": 0.01349, "loss_rpn_bbox": 0.01744, "loss_cls": 0.11131, "acc": 92.0647, "loss_bbox": 0.19713, "loss": 0.33938, "time": 3.45948}
{"mode": "train", "epoch": 4, "iter": 450, "lr": 0.01, "memory": 36575, "data_time": 1.07448, "loss_rpn_cls": 0.0133, "loss_rpn_bbox": 0.01791, "loss_cls": 0.11083, "acc": 92.23157, "loss_bbox": 0.19154, "loss": 0.33359, "time": 3.56341}
{"mode": "val", "epoch": 4, "iter": 4952, "lr": 0.01, "mAP": 0.72188, "AP50": 0.722}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 0.01, "memory": 36575, "data_time": 1.08775, "loss_rpn_cls": 0.01266, "loss_rpn_bbox": 0.01758, "loss_cls": 0.10628, "acc": 92.41345, "loss_bbox": 0.18507, "loss": 0.32158, "time": 3.46248}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.01, "memory": 36575, "data_time": 1.31377, "loss_rpn_cls": 0.01245, "loss_rpn_bbox": 0.01721, "loss_cls": 0.10547, "acc": 92.5271, "loss_bbox": 0.18236, "loss": 0.31749, "time": 3.67339}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 0.01, "memory": 36575, "data_time": 1.28407, "loss_rpn_cls": 0.01295, "loss_rpn_bbox": 0.01718, "loss_cls": 0.10353, "acc": 92.54065, "loss_bbox": 0.18476, "loss": 0.31842, "time": 3.68281}
{"mode": "train", "epoch": 5, "iter": 200, "lr": 0.01, "memory": 36575, "data_time": 1.04172, "loss_rpn_cls": 0.01194, "loss_rpn_bbox": 0.01744, "loss_cls": 0.10445, "acc": 92.46606, "loss_bbox": 0.18584, "loss": 0.31966, "time": 3.40639}
{"mode": "train", "epoch": 5, "iter": 250, "lr": 0.01, "memory": 36575, "data_time": 1.04211, "loss_rpn_cls": 0.01149, "loss_rpn_bbox": 0.01658, "loss_cls": 0.10033, "acc": 92.80408, "loss_bbox": 0.17689, "loss": 0.30529, "time": 3.33172}
{"mode": "train", "epoch": 5, "iter": 300, "lr": 0.01, "memory": 36575, "data_time": 0.95393, "loss_rpn_cls": 0.01162, "loss_rpn_bbox": 0.01606, "loss_cls": 0.09987, "acc": 92.85193, "loss_bbox": 0.17572, "loss": 0.30327, "time": 3.27308}
{"mode": "train", "epoch": 5, "iter": 350, "lr": 0.01, "memory": 36575, "data_time": 0.91405, "loss_rpn_cls": 0.01203, "loss_rpn_bbox": 0.01638, "loss_cls": 0.10171, "acc": 92.79504, "loss_bbox": 0.17266, "loss": 0.30278, "time": 3.25326}
{"mode": "train", "epoch": 5, "iter": 400, "lr": 0.01, "memory": 36575, "data_time": 0.91239, "loss_rpn_cls": 0.01109, "loss_rpn_bbox": 0.01639, "loss_cls": 0.09797, "acc": 92.90991, "loss_bbox": 0.16956, "loss": 0.29502, "time": 3.22656}
{"mode": "train", "epoch": 5, "iter": 450, "lr": 0.01, "memory": 36575, "data_time": 0.93419, "loss_rpn_cls": 0.01159, "loss_rpn_bbox": 0.01662, "loss_cls": 0.10369, "acc": 92.55762, "loss_bbox": 0.18268, "loss": 0.31457, "time": 3.30773}
{"mode": "val", "epoch": 5, "iter": 4952, "lr": 0.01, "mAP": 0.74951, "AP50": 0.75}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 0.01, "memory": 36575, "data_time": 1.15489, "loss_rpn_cls": 0.01103, "loss_rpn_bbox": 0.01581, "loss_cls": 0.0974, "acc": 92.93347, "loss_bbox": 0.1725, "loss": 0.29673, "time": 3.68945}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 0.01, "memory": 36575, "data_time": 1.11742, "loss_rpn_cls": 0.01026, "loss_rpn_bbox": 0.01574, "loss_cls": 0.09115, "acc": 93.32312, "loss_bbox": 0.16211, "loss": 0.27927, "time": 3.5583}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 0.01, "memory": 36575, "data_time": 1.13107, "loss_rpn_cls": 0.01041, "loss_rpn_bbox": 0.01577, "loss_cls": 0.09416, "acc": 93.15637, "loss_bbox": 0.16072, "loss": 0.28106, "time": 3.58378}
{"mode": "train", "epoch": 6, "iter": 200, "lr": 0.01, "memory": 36575, "data_time": 1.08372, "loss_rpn_cls": 0.01019, "loss_rpn_bbox": 0.01635, "loss_cls": 0.0911, "acc": 93.34497, "loss_bbox": 0.15904, "loss": 0.27667, "time": 3.51843}
{"mode": "train", "epoch": 6, "iter": 250, "lr": 0.01, "memory": 36575, "data_time": 1.0817, "loss_rpn_cls": 0.01025, "loss_rpn_bbox": 0.01685, "loss_cls": 0.09071, "acc": 93.33423, "loss_bbox": 0.16128, "loss": 0.27909, "time": 3.50379}
{"mode": "train", "epoch": 6, "iter": 300, "lr": 0.01, "memory": 36575, "data_time": 1.03001, "loss_rpn_cls": 0.01052, "loss_rpn_bbox": 0.01555, "loss_cls": 0.08621, "acc": 93.67029, "loss_bbox": 0.15255, "loss": 0.26483, "time": 3.38606}
{"mode": "train", "epoch": 6, "iter": 350, "lr": 0.01, "memory": 36575, "data_time": 1.04429, "loss_rpn_cls": 0.01047, "loss_rpn_bbox": 0.01567, "loss_cls": 0.09101, "acc": 93.23926, "loss_bbox": 0.16376, "loss": 0.28092, "time": 3.49315}
{"mode": "train", "epoch": 6, "iter": 400, "lr": 0.01, "memory": 36575, "data_time": 1.04199, "loss_rpn_cls": 0.00957, "loss_rpn_bbox": 0.01546, "loss_cls": 0.08654, "acc": 93.62244, "loss_bbox": 0.154, "loss": 0.26557, "time": 3.51073}
{"mode": "train", "epoch": 6, "iter": 450, "lr": 0.01, "memory": 36575, "data_time": 1.10135, "loss_rpn_cls": 0.01014, "loss_rpn_bbox": 0.01623, "loss_cls": 0.0896, "acc": 93.3717, "loss_bbox": 0.15735, "loss": 0.27332, "time": 3.61627}
{"mode": "val", "epoch": 6, "iter": 4952, "lr": 0.01, "mAP": 0.75807, "AP50": 0.758}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 0.01, "memory": 36575, "data_time": 1.40939, "loss_rpn_cls": 0.00988, "loss_rpn_bbox": 0.01543, "loss_cls": 0.08328, "acc": 93.83398, "loss_bbox": 0.14337, "loss": 0.25195, "time": 3.86257}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 0.01, "memory": 36575, "data_time": 1.49785, "loss_rpn_cls": 0.00964, "loss_rpn_bbox": 0.01525, "loss_cls": 0.08489, "acc": 93.75537, "loss_bbox": 0.14917, "loss": 0.25895, "time": 3.95775}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 0.01, "memory": 36575, "data_time": 1.50222, "loss_rpn_cls": 0.00985, "loss_rpn_bbox": 0.01504, "loss_cls": 0.0822, "acc": 93.82898, "loss_bbox": 0.14511, "loss": 0.2522, "time": 3.93057}
{"mode": "train", "epoch": 7, "iter": 200, "lr": 0.01, "memory": 36575, "data_time": 1.52653, "loss_rpn_cls": 0.00982, "loss_rpn_bbox": 0.01576, "loss_cls": 0.08465, "acc": 93.74756, "loss_bbox": 0.14924, "loss": 0.25948, "time": 3.93127}
{"mode": "train", "epoch": 7, "iter": 250, "lr": 0.01, "memory": 36575, "data_time": 1.20391, "loss_rpn_cls": 0.00966, "loss_rpn_bbox": 0.01601, "loss_cls": 0.083, "acc": 93.84338, "loss_bbox": 0.14831, "loss": 0.25698, "time": 3.6606}
{"mode": "train", "epoch": 7, "iter": 300, "lr": 0.01, "memory": 36575, "data_time": 1.33276, "loss_rpn_cls": 0.00962, "loss_rpn_bbox": 0.01572, "loss_cls": 0.08438, "acc": 93.72766, "loss_bbox": 0.14827, "loss": 0.25798, "time": 3.79915}
{"mode": "train", "epoch": 7, "iter": 350, "lr": 0.01, "memory": 36575, "data_time": 1.50218, "loss_rpn_cls": 0.00893, "loss_rpn_bbox": 0.01543, "loss_cls": 0.08215, "acc": 93.86694, "loss_bbox": 0.14233, "loss": 0.24884, "time": 3.91678}
{"mode": "train", "epoch": 7, "iter": 400, "lr": 0.01, "memory": 36575, "data_time": 1.524, "loss_rpn_cls": 0.00906, "loss_rpn_bbox": 0.01541, "loss_cls": 0.07711, "acc": 94.22644, "loss_bbox": 0.13773, "loss": 0.23932, "time": 3.90891}
{"mode": "train", "epoch": 7, "iter": 450, "lr": 0.01, "memory": 36575, "data_time": 1.55007, "loss_rpn_cls": 0.00862, "loss_rpn_bbox": 0.01485, "loss_cls": 0.07714, "acc": 94.25122, "loss_bbox": 0.13438, "loss": 0.23499, "time": 3.92421}
{"mode": "val", "epoch": 7, "iter": 4952, "lr": 0.01, "mAP": 0.75611, "AP50": 0.756}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 0.01, "memory": 36575, "data_time": 1.17518, "loss_rpn_cls": 0.00892, "loss_rpn_bbox": 0.01582, "loss_cls": 0.08043, "acc": 94.01953, "loss_bbox": 0.14251, "loss": 0.24768, "time": 3.56978}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 0.01, "memory": 36575, "data_time": 1.11297, "loss_rpn_cls": 0.0082, "loss_rpn_bbox": 0.01485, "loss_cls": 0.07433, "acc": 94.42285, "loss_bbox": 0.1312, "loss": 0.22857, "time": 3.48057}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 0.01, "memory": 36575, "data_time": 1.1031, "loss_rpn_cls": 0.00834, "loss_rpn_bbox": 0.01443, "loss_cls": 0.07352, "acc": 94.46851, "loss_bbox": 0.12797, "loss": 0.22427, "time": 3.49122}
{"mode": "train", "epoch": 8, "iter": 200, "lr": 0.01, "memory": 36575, "data_time": 1.08128, "loss_rpn_cls": 0.00806, "loss_rpn_bbox": 0.01514, "loss_cls": 0.07398, "acc": 94.44666, "loss_bbox": 0.12997, "loss": 0.22716, "time": 3.52806}
{"mode": "train", "epoch": 8, "iter": 250, "lr": 0.01, "memory": 36575, "data_time": 1.26543, "loss_rpn_cls": 0.0081, "loss_rpn_bbox": 0.0152, "loss_cls": 0.07719, "acc": 94.15833, "loss_bbox": 0.13916, "loss": 0.23964, "time": 3.7193}
{"mode": "train", "epoch": 8, "iter": 300, "lr": 0.01, "memory": 36575, "data_time": 1.33809, "loss_rpn_cls": 0.00847, "loss_rpn_bbox": 0.01558, "loss_cls": 0.07722, "acc": 94.17725, "loss_bbox": 0.13693, "loss": 0.2382, "time": 3.80466}
{"mode": "train", "epoch": 8, "iter": 350, "lr": 0.01, "memory": 36575, "data_time": 1.21224, "loss_rpn_cls": 0.00835, "loss_rpn_bbox": 0.01486, "loss_cls": 0.07264, "acc": 94.5675, "loss_bbox": 0.12508, "loss": 0.22092, "time": 3.72552}
{"mode": "train", "epoch": 8, "iter": 400, "lr": 0.01, "memory": 36575, "data_time": 1.16978, "loss_rpn_cls": 0.0089, "loss_rpn_bbox": 0.01537, "loss_cls": 0.07277, "acc": 94.5094, "loss_bbox": 0.12633, "loss": 0.22335, "time": 3.66837}
{"mode": "train", "epoch": 8, "iter": 450, "lr": 0.01, "memory": 36575, "data_time": 1.33216, "loss_rpn_cls": 0.0086, "loss_rpn_bbox": 0.01499, "loss_cls": 0.07679, "acc": 94.2179, "loss_bbox": 0.13165, "loss": 0.23203, "time": 3.78525}
{"mode": "val", "epoch": 8, "iter": 4952, "lr": 0.01, "mAP": 0.76782, "AP50": 0.768}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 0.001, "memory": 36575, "data_time": 1.27461, "loss_rpn_cls": 0.00718, "loss_rpn_bbox": 0.01328, "loss_cls": 0.06412, "acc": 95.11768, "loss_bbox": 0.10889, "loss": 0.19346, "time": 3.65836}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 0.001, "memory": 36575, "data_time": 1.19269, "loss_rpn_cls": 0.00696, "loss_rpn_bbox": 0.01439, "loss_cls": 0.06423, "acc": 95.06372, "loss_bbox": 0.10941, "loss": 0.19499, "time": 3.59197}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 0.001, "memory": 36575, "data_time": 1.17577, "loss_rpn_cls": 0.00717, "loss_rpn_bbox": 0.01398, "loss_cls": 0.06355, "acc": 95.07251, "loss_bbox": 0.1086, "loss": 0.1933, "time": 3.55298}
{"mode": "train", "epoch": 9, "iter": 200, "lr": 0.001, "memory": 36575, "data_time": 1.19247, "loss_rpn_cls": 0.00694, "loss_rpn_bbox": 0.01337, "loss_cls": 0.06004, "acc": 95.34033, "loss_bbox": 0.10378, "loss": 0.18413, "time": 3.58103}
{"mode": "train", "epoch": 9, "iter": 250, "lr": 0.001, "memory": 36575, "data_time": 1.16671, "loss_rpn_cls": 0.00677, "loss_rpn_bbox": 0.01291, "loss_cls": 0.06046, "acc": 95.3324, "loss_bbox": 0.10342, "loss": 0.18355, "time": 3.62454}
{"mode": "train", "epoch": 9, "iter": 300, "lr": 0.001, "memory": 36575, "data_time": 1.13625, "loss_rpn_cls": 0.00656, "loss_rpn_bbox": 0.01335, "loss_cls": 0.06126, "acc": 95.23364, "loss_bbox": 0.10328, "loss": 0.18445, "time": 3.58856}
{"mode": "train", "epoch": 9, "iter": 350, "lr": 0.001, "memory": 36575, "data_time": 1.09649, "loss_rpn_cls": 0.007, "loss_rpn_bbox": 0.0136, "loss_cls": 0.06011, "acc": 95.34167, "loss_bbox": 0.1017, "loss": 0.18241, "time": 3.55565}
{"mode": "train", "epoch": 9, "iter": 400, "lr": 0.001, "memory": 36575, "data_time": 1.09511, "loss_rpn_cls": 0.0068, "loss_rpn_bbox": 0.01298, "loss_cls": 0.05905, "acc": 95.40869, "loss_bbox": 0.09823, "loss": 0.17706, "time": 3.58533}
{"mode": "train", "epoch": 9, "iter": 450, "lr": 0.001, "memory": 36575, "data_time": 1.15897, "loss_rpn_cls": 0.00706, "loss_rpn_bbox": 0.01369, "loss_cls": 0.06006, "acc": 95.32446, "loss_bbox": 0.10298, "loss": 0.18379, "time": 3.60984}
{"mode": "val", "epoch": 9, "iter": 4952, "lr": 0.001, "mAP": 0.78451, "AP50": 0.785}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 0.001, "memory": 36575, "data_time": 1.4678, "loss_rpn_cls": 0.00694, "loss_rpn_bbox": 0.01364, "loss_cls": 0.06034, "acc": 95.297, "loss_bbox": 0.10223, "loss": 0.18315, "time": 3.91207}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 0.001, "memory": 36575, "data_time": 1.03675, "loss_rpn_cls": 0.00666, "loss_rpn_bbox": 0.01329, "loss_cls": 0.05805, "acc": 95.46558, "loss_bbox": 0.09738, "loss": 0.17538, "time": 3.46478}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 0.001, "memory": 36575, "data_time": 1.09858, "loss_rpn_cls": 0.00673, "loss_rpn_bbox": 0.01377, "loss_cls": 0.05853, "acc": 95.46191, "loss_bbox": 0.09833, "loss": 0.17735, "time": 3.50319}
{"mode": "train", "epoch": 10, "iter": 200, "lr": 0.001, "memory": 36575, "data_time": 1.06954, "loss_rpn_cls": 0.007, "loss_rpn_bbox": 0.01323, "loss_cls": 0.05683, "acc": 95.55347, "loss_bbox": 0.09517, "loss": 0.17224, "time": 3.44783}
{"mode": "train", "epoch": 10, "iter": 250, "lr": 0.001, "memory": 36575, "data_time": 1.12366, "loss_rpn_cls": 0.00685, "loss_rpn_bbox": 0.01376, "loss_cls": 0.05942, "acc": 95.38452, "loss_bbox": 0.09838, "loss": 0.1784, "time": 3.5231}
{"mode": "train", "epoch": 10, "iter": 300, "lr": 0.001, "memory": 36575, "data_time": 1.11585, "loss_rpn_cls": 0.00722, "loss_rpn_bbox": 0.01362, "loss_cls": 0.05935, "acc": 95.38879, "loss_bbox": 0.09973, "loss": 0.17992, "time": 3.54373}
{"mode": "train", "epoch": 10, "iter": 350, "lr": 0.001, "memory": 36575, "data_time": 1.1274, "loss_rpn_cls": 0.00697, "loss_rpn_bbox": 0.01281, "loss_cls": 0.05553, "acc": 95.66431, "loss_bbox": 0.09274, "loss": 0.16805, "time": 3.57866}
{"mode": "train", "epoch": 10, "iter": 400, "lr": 0.001, "memory": 36575, "data_time": 1.07574, "loss_rpn_cls": 0.00676, "loss_rpn_bbox": 0.01339, "loss_cls": 0.05964, "acc": 95.34937, "loss_bbox": 0.10016, "loss": 0.17995, "time": 3.52053}
{"mode": "train", "epoch": 10, "iter": 450, "lr": 0.001, "memory": 36575, "data_time": 1.1425, "loss_rpn_cls": 0.00652, "loss_rpn_bbox": 0.0133, "loss_cls": 0.05808, "acc": 95.4198, "loss_bbox": 0.09831, "loss": 0.17622, "time": 3.58681}
{"mode": "val", "epoch": 10, "iter": 4952, "lr": 0.001, "mAP": 0.78541, "AP50": 0.785}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 0.001, "memory": 36575, "data_time": 1.10813, "loss_rpn_cls": 0.00661, "loss_rpn_bbox": 0.01321, "loss_cls": 0.0562, "acc": 95.59021, "loss_bbox": 0.09296, "loss": 0.16897, "time": 3.53129}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 0.001, "memory": 36575, "data_time": 0.98833, "loss_rpn_cls": 0.00646, "loss_rpn_bbox": 0.01383, "loss_cls": 0.05702, "acc": 95.55273, "loss_bbox": 0.09397, "loss": 0.17129, "time": 3.49037}
{"mode": "train", "epoch": 11, "iter": 150, "lr": 0.001, "memory": 36575, "data_time": 1.04579, "loss_rpn_cls": 0.0066, "loss_rpn_bbox": 0.01382, "loss_cls": 0.05669, "acc": 95.59094, "loss_bbox": 0.09476, "loss": 0.17187, "time": 3.49816}
{"mode": "train", "epoch": 11, "iter": 200, "lr": 0.001, "memory": 36575, "data_time": 1.06809, "loss_rpn_cls": 0.00653, "loss_rpn_bbox": 0.01344, "loss_cls": 0.05923, "acc": 95.3855, "loss_bbox": 0.0962, "loss": 0.1754, "time": 3.52315}
{"mode": "train", "epoch": 11, "iter": 250, "lr": 0.001, "memory": 36575, "data_time": 1.12156, "loss_rpn_cls": 0.00652, "loss_rpn_bbox": 0.01282, "loss_cls": 0.05573, "acc": 95.64673, "loss_bbox": 0.0927, "loss": 0.16777, "time": 3.58446}
{"mode": "train", "epoch": 11, "iter": 300, "lr": 0.001, "memory": 36575, "data_time": 1.02781, "loss_rpn_cls": 0.00629, "loss_rpn_bbox": 0.01265, "loss_cls": 0.05387, "acc": 95.80762, "loss_bbox": 0.08986, "loss": 0.16267, "time": 3.48931}
{"mode": "train", "epoch": 11, "iter": 350, "lr": 0.001, "memory": 36575, "data_time": 1.03143, "loss_rpn_cls": 0.00657, "loss_rpn_bbox": 0.01329, "loss_cls": 0.0574, "acc": 95.51221, "loss_bbox": 0.09567, "loss": 0.17293, "time": 3.49183}
{"mode": "train", "epoch": 11, "iter": 400, "lr": 0.001, "memory": 36575, "data_time": 1.04397, "loss_rpn_cls": 0.00691, "loss_rpn_bbox": 0.01327, "loss_cls": 0.05586, "acc": 95.60632, "loss_bbox": 0.09329, "loss": 0.16932, "time": 3.41951}
{"mode": "train", "epoch": 11, "iter": 450, "lr": 0.001, "memory": 36575, "data_time": 1.06684, "loss_rpn_cls": 0.00648, "loss_rpn_bbox": 0.01346, "loss_cls": 0.05722, "acc": 95.48083, "loss_bbox": 0.09683, "loss": 0.17398, "time": 3.47551}
{"mode": "val", "epoch": 11, "iter": 4952, "lr": 0.001, "mAP": 0.78636, "AP50": 0.786}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 0.0001, "memory": 36575, "data_time": 1.12602, "loss_rpn_cls": 0.00615, "loss_rpn_bbox": 0.01302, "loss_cls": 0.05714, "acc": 95.49927, "loss_bbox": 0.09415, "loss": 0.17047, "time": 3.57193}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.0001, "memory": 36575, "data_time": 1.07703, "loss_rpn_cls": 0.0063, "loss_rpn_bbox": 0.01276, "loss_cls": 0.05479, "acc": 95.74561, "loss_bbox": 0.08768, "loss": 0.16154, "time": 3.55008}
{"mode": "train", "epoch": 12, "iter": 150, "lr": 0.0001, "memory": 36575, "data_time": 1.0776, "loss_rpn_cls": 0.00617, "loss_rpn_bbox": 0.01289, "loss_cls": 0.0547, "acc": 95.68811, "loss_bbox": 0.08922, "loss": 0.16298, "time": 3.55052}
{"mode": "train", "epoch": 12, "iter": 200, "lr": 0.0001, "memory": 36575, "data_time": 0.81739, "loss_rpn_cls": 0.00657, "loss_rpn_bbox": 0.01312, "loss_cls": 0.05439, "acc": 95.73901, "loss_bbox": 0.08909, "loss": 0.16317, "time": 3.30492}
{"mode": "train", "epoch": 12, "iter": 250, "lr": 0.0001, "memory": 36575, "data_time": 0.79999, "loss_rpn_cls": 0.00619, "loss_rpn_bbox": 0.01246, "loss_cls": 0.0553, "acc": 95.70227, "loss_bbox": 0.0891, "loss": 0.16305, "time": 3.31705}
{"mode": "train", "epoch": 12, "iter": 300, "lr": 0.0001, "memory": 36575, "data_time": 0.73951, "loss_rpn_cls": 0.00628, "loss_rpn_bbox": 0.01366, "loss_cls": 0.05557, "acc": 95.6759, "loss_bbox": 0.0915, "loss": 0.16702, "time": 3.23011}
{"mode": "train", "epoch": 12, "iter": 350, "lr": 0.0001, "memory": 36575, "data_time": 0.72964, "loss_rpn_cls": 0.00634, "loss_rpn_bbox": 0.01304, "loss_cls": 0.05534, "acc": 95.64197, "loss_bbox": 0.09182, "loss": 0.16655, "time": 3.13696}
{"mode": "train", "epoch": 12, "iter": 400, "lr": 0.0001, "memory": 36575, "data_time": 0.71471, "loss_rpn_cls": 0.00646, "loss_rpn_bbox": 0.01367, "loss_cls": 0.05584, "acc": 95.58765, "loss_bbox": 0.09224, "loss": 0.1682, "time": 3.11613}
{"mode": "train", "epoch": 12, "iter": 450, "lr": 0.0001, "memory": 36575, "data_time": 0.71156, "loss_rpn_cls": 0.00618, "loss_rpn_bbox": 0.01416, "loss_cls": 0.0568, "acc": 95.5564, "loss_bbox": 0.09368, "loss": 0.17082, "time": 3.1286}
{"mode": "val", "epoch": 12, "iter": 4952, "lr": 0.0001, "mAP": 0.7856, "AP50": 0.786}
